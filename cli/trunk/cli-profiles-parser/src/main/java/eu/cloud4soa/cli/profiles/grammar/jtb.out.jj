/* Generated by JTB 1.4.4 */


options
{
  JDK_VERSION = "1.6";
  static = true;
}

PARSER_BEGIN(CloudProfilesParser)
package eu.cloud4soa.cli.profiles.grammar;

import eu.cloud4soa.cli.profiles.grammar.syntaxtree.*;
import eu.cloud4soa.cli.profiles.grammar.visitor.*;
import eu.cloud4soa.cli.profiles.grammar.syntaxtree.*;


public class CloudProfilesParser {

  public static void main(String args[]) {
    System.out.println("Reading from standard input...");
    System.out.print("Enter an expression like \"1+(2+3)*var;\" :");
    new CloudProfilesParser(System.in);
    try {
      Scope scope = CloudProfilesParser.Scope();
    }
    catch (Exception e) {
      System.out.println("Oops.");
      System.out.println(e.getMessage());
    }
  }
}

class JTBToolkit {

  static NodeToken makeNodeToken(final Token t) {
    return new NodeToken(t.image.intern(), t.kind, t.beginLine, t.beginColumn, t.endLine, t.endColumn);
  }
}

PARSER_END(CloudProfilesParser)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
| < "//" ( ~["\n", "\r"] )* ( "\n"| "\r"| "\r\n" ) >
}

TOKEN :
{
  < PROFILE : "profile" >
| < DEVELOPER : "developer" >
| < PROVIDER : "provider" >
| < APPLICATION : "application" >
| < PAAS_OFFERING : "paas_offering" >
| < ACCOUNT : "account" >
| < SOFTWARE : "software" >
| < HARDWARE : "hardware" >
| < NETWORK_RESOURCE : "network_resource" >
| < BOX : "box" >
| < COMPUTE : "compute" >
| < HTTP_REQUESTS : "http_requests" >
| < STORAGE_RESOURCE : "storage_resource" >
| < CHANNELS : "channels" >
| < API : "api" >
| < CLI : "cli" >
| < WebInterface : "web_interface" >
| < LBRACE : "{" >
| < RBRACE : "}" >
| < COLON : ":" >
| < BANDWIDTH : "bandwidth" >
| < LATENCY : "latency" >
| < SPEED : "speed" >
| < MEMORY : "memory" >
| < CACHE : "cache" >
| < CAPACITY : "capacity" >
| < FIRSTNAME : "firstname" >
| < SURNAME : "surname" >
| < USERNAME : "username" >
| < PASSWORD : "password" >
| < ACRONYM : "acronym" >
| < COMMAND : "command" >
| < DIGEST : "digest" >
| < URL : "url" >
| < PROGRAMMING_LANGUAGE : "programming_language" >
| < INFORMATION_RETURNED : "information_returned" >
| < APPLICATION_CODE : "application_code" >
| < SIZE : "size" >
| < FILE_NAME : "file_name" >
| < CATEGORY : "category" >
| < COMPONENT : "component" >
| < DESCRIPTION : "description" >
| < BIRTHDAY : "birthday" >
| < EMAIL : "email" >
| < VERSION : "version" >
| < LICENSE : "license" >
| < LICENSE_TYPE : ( "GPL"| "LGPL"| "BSD"| "MIT" ) >
| < CORES : "cores" >
| < ARCHITECTURE : "architecture" >
| < OPERATION : "operation" >
| < ARCHITECTURE_VALUE : ( "x86"| "x64" ) >
| < FLOATING_POINT : <NATURAL_NUMBER> ( "." <NATURAL_NUMBER> )+ >
| < NATURAL_NUMBER : ( ["0"-"9"]| ["1"-"9"] ( ["0"-"9"] )+ ) >
| < DATE_US : ["0"-"9"] ["0"-"9"] ["0"-"9"] ["0"-"9"] "-" ["0"-"9"] ["0"-"9"] "-" ["0"-"9"] ["0"-"9"] >
| < STRING : "\"" ( ["A"-"Z", "a"-"z", "0"-"9", "_", "\'", ".", ":", "-", "+", "#", "*", " ", "@", "/"] )+ "\"" >
}

Scope Scope() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeChoice n4 = null;
  UserProfile n5 = null;
  ApplicationProfile n6 = null;
  PaasOfferingProfile n7 = null;
  NodeToken n8 = null;
  Token n9 = null;
}
{
  n1 = < PROFILE >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < LBRACE >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  (
    (
      n5 = UserProfile()
      { n4 = new NodeChoice(n5, 0, 3); }
    |
      n6 = ApplicationProfile()
      { n4 = new NodeChoice(n6, 1, 3); }
    |
      n7 = PaasOfferingProfile()
      { n4 = new NodeChoice(n7, 2, 3); }
    )
    
  )
  n9 = < RBRACE >
  { n8 = JTBToolkit.makeNodeToken(n9); }
  { return new Scope(n0, n2, n4, n8); }
}

UserProfile UserProfile() :
{
  // --- JTB generated node declarations ---
  NodeChoice n0 = null;
  NodeToken n1 = null;
  Token n2 = null;
  NodeSequence n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
  Provider n8 = null;
  NodeToken n9 = null;
  Token n10 = null;
  AccountInfo n11 = null;
  PersonalInfos n12 = null;
  NodeToken n13 = null;
  Token n14 = null;
}
{
  (
    (
      n2 = < DEVELOPER >
      { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0, 2); }
    |
      { n3 = new NodeSequence(3); }
      n5 = < PROVIDER >
      { n4 = JTBToolkit.makeNodeToken(n5); }
      { n3.addNode(n4); }
      n7 = < COLON >
      { n6 = JTBToolkit.makeNodeToken(n7); }
      { n3.addNode(n6); }
      n8 = Provider()
      { n3.addNode(n8); }
      { n0 = new NodeChoice(n3, 1, 2); }
    )
    
  )
  n10 = < LBRACE >
  { n9 = JTBToolkit.makeNodeToken(n10); }
  n11 = AccountInfo()
  n12 = PersonalInfos()
  n14 = < RBRACE >
  { n13 = JTBToolkit.makeNodeToken(n14); }
  { return new UserProfile(n0, n9, n11, n12, n13); }
}

PersonalInfos PersonalInfos() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
  NodeToken n8 = null;
  Token n9 = null;
  NodeToken n10 = null;
  Token n11 = null;
  NodeToken n12 = null;
  Token n13 = null;
  NodeToken n14 = null;
  Token n15 = null;
  NodeToken n16 = null;
  Token n17 = null;
  NodeOptional n18 = new NodeOptional();
  Birthday n19 = null;
}
{
  n1 = < FIRSTNAME >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  n7 = < SURNAME >
  { n6 = JTBToolkit.makeNodeToken(n7); }
  n9 = < COLON >
  { n8 = JTBToolkit.makeNodeToken(n9); }
  n11 = < STRING >
  { n10 = JTBToolkit.makeNodeToken(n11); }
  n13 = < EMAIL >
  { n12 = JTBToolkit.makeNodeToken(n13); }
  n15 = < COLON >
  { n14 = JTBToolkit.makeNodeToken(n15); }
  n17 = < STRING >
  { n16 = JTBToolkit.makeNodeToken(n17); }
  (
    n19 = Birthday()
    { n18.addNode(n19); }
  )?
  { return new PersonalInfos(n0, n2, n4, n6, n8, n10, n12, n14, n16, n18); }
}

Birthday Birthday() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < BIRTHDAY >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < DATE_US >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Birthday(n0, n2, n4); }
}

AccountInfo AccountInfo() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
  NodeToken n8 = null;
  Token n9 = null;
  NodeToken n10 = null;
  Token n11 = null;
}
{
  n1 = < USERNAME >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  n7 = < PASSWORD >
  { n6 = JTBToolkit.makeNodeToken(n7); }
  n9 = < COLON >
  { n8 = JTBToolkit.makeNodeToken(n9); }
  n11 = < STRING >
  { n10 = JTBToolkit.makeNodeToken(n11); }
  { return new AccountInfo(n0, n2, n4, n6, n8, n10); }
}

Provider Provider() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
}
{
  n1 = < STRING >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < URL >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < COLON >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  n7 = < STRING >
  { n6 = JTBToolkit.makeNodeToken(n7); }
  { return new Provider(n0, n2, n4, n6); }
}

ApplicationProfile ApplicationProfile() :
{
  // --- JTB generated node declarations ---
  ApplicationInfos n0 = null;
  File n1 = null;
  TechnologyInfo n2 = null;
}
{
  n0 = ApplicationInfos()
  n1 = File()
  n2 = TechnologyInfo()
  { return new ApplicationProfile(n0, n1, n2); }
}

ApplicationInfos ApplicationInfos() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  Version n6 = null;
  NodeOptional n7 = new NodeOptional();
  ApplicationCode n8 = null;
}
{
  n1 = < APPLICATION >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  n6 = Version()
  (
    n8 = ApplicationCode()
    { n7.addNode(n8); }
  )?
  { return new ApplicationInfos(n0, n2, n4, n6, n7); }
}

ApplicationCode ApplicationCode() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < APPLICATION_CODE >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new ApplicationCode(n0, n2, n4); }
}

PaasOfferingProfile PaasOfferingProfile() :
{
  // --- JTB generated node declarations ---
  PaasOfferingInfos n0 = null;
  Channels n1 = null;
  TechnologyInfo n2 = null;
}
{
  n0 = PaasOfferingInfos()
  n1 = Channels()
  n2 = TechnologyInfo()
  { return new PaasOfferingProfile(n0, n1, n2); }
}

PaasOfferingInfos PaasOfferingInfos() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < PAAS_OFFERING >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new PaasOfferingInfos(n0, n2, n4); }
}

File File() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  NodeOptional n6 = new NodeOptional();
  FileDimension n7 = null;
}
{
  n1 = < FILE_NAME >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  (
    n7 = FileDimension()
    { n6.addNode(n7); }
  )?
  { return new File(n0, n2, n4, n6); }
}

FileDimension FileDimension() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  NodeOptional n6 = new NodeOptional();
  Digest n7 = null;
}
{
  n1 = < SIZE >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < NATURAL_NUMBER >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  (
    n7 = Digest()
    { n6.addNode(n7); }
  )?
  { return new FileDimension(n0, n2, n4, n6); }
}

Digest Digest() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < DIGEST >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Digest(n0, n2, n4); }
}

TechnologyInfo TechnologyInfo() :
{
  // --- JTB generated node declarations ---
  ProgrammingLanguage n0 = null;
  Software n1 = null;
  Hardware n2 = null;
}
{
  n0 = ProgrammingLanguage()
  n1 = Software()
  n2 = Hardware()
  { return new TechnologyInfo(n0, n1, n2); }
}

ProgrammingLanguage ProgrammingLanguage() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  Version n6 = null;
}
{
  n1 = < PROGRAMMING_LANGUAGE >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  n6 = Version()
  { return new ProgrammingLanguage(n0, n2, n4, n6); }
}

Software Software() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeList n4 = new NodeList();
  NodeSequence n5 = null;
  SoftwareCategory n6 = null;
  NodeToken n7 = null;
  Token n8 = null;
  NodeList n9 = null;
  SoftwareComponent n10 = null;
  NodeToken n11 = null;
  Token n12 = null;
  NodeToken n13 = null;
  Token n14 = null;
}
{
  n1 = < SOFTWARE >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < LBRACE >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  (
    { n9 = new NodeList(); }
    { n5 = new NodeSequence(4); }
    n6 = SoftwareCategory()
    { n5.addNode(n6); }
    n8 = < LBRACE >
    { n7 = JTBToolkit.makeNodeToken(n8); }
    { n5.addNode(n7); }
    (
      n10 = SoftwareComponent()
      { n9.addNode(n10); }
    )+
    { n9.nodes.trimToSize(); }
    { n5.addNode(n9); }
    n12 = < RBRACE >
    { n11 = JTBToolkit.makeNodeToken(n12); }
    { n5.addNode(n11); }
    { n4.addNode(n5); }
  )+
  { n4.nodes.trimToSize(); }
  n14 = < RBRACE >
  { n13 = JTBToolkit.makeNodeToken(n14); }
  { return new Software(n0, n2, n4, n13); }
}

SoftwareCategory SoftwareCategory() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  Description n6 = null;
}
{
  n1 = < CATEGORY >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  n6 = Description()
  { return new SoftwareCategory(n0, n2, n4, n6); }
}

SoftwareComponent SoftwareComponent() :
{
  // --- JTB generated node declarations ---
  Component n0 = null;
  Version n1 = null;
  NodeOptional n2 = new NodeOptional();
  License n3 = null;
}
{
  n0 = Component()
  n1 = Version()
  (
    n3 = License()
    { n2.addNode(n3); }
  )?
  { return new SoftwareComponent(n0, n1, n2); }
}

Component Component() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  Description n6 = null;
}
{
  n1 = < COMPONENT >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  n6 = Description()
  { return new Component(n0, n2, n4, n6); }
}

Description Description() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < DESCRIPTION >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Description(n0, n2, n4); }
}

License License() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < LICENSE >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < LICENSE_TYPE >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new License(n0, n2, n4); }
}

Hardware Hardware() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeOptional n4 = new NodeOptional();
  NodeChoice n5 = null;
  Box n6 = null;
  Compute n7 = null;
  NodeListOptional n8 = new NodeListOptional();
  NetworkResource n9 = null;
  NodeListOptional n10 = new NodeListOptional();
  StorageResource n11 = null;
  NodeToken n12 = null;
  Token n13 = null;
}
{
  n1 = < HARDWARE >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < LBRACE >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  (
    (
      n6 = Box()
      { n5 = new NodeChoice(n6, 0, 2); }
    |
      n7 = Compute()
      { n5 = new NodeChoice(n7, 1, 2); }
    )
    { n4.addNode(n5); }
  )?
  (
    n9 = NetworkResource()
    { n8.addNode(n9); }
  )*
  { n8.nodes.trimToSize(); }
  (
    n11 = StorageResource()
    { n10.addNode(n11); }
  )*
  { n10.nodes.trimToSize(); }
  n13 = < RBRACE >
  { n12 = JTBToolkit.makeNodeToken(n13); }
  { return new Hardware(n0, n2, n4, n8, n10, n12); }
}

Box Box() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  BoxComponent n2 = null;
}
{
  n1 = < BOX >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n2 = BoxComponent()
  { return new Box(n0, n2); }
}

BoxComponent BoxComponent() :
{
  // --- JTB generated node declarations ---
  Component n0 = null;
  HttpRequests n1 = null;
}
{
  n0 = Component()
  n1 = HttpRequests()
  { return new BoxComponent(n0, n1); }
}

HttpRequests HttpRequests() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < HTTP_REQUESTS >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < NATURAL_NUMBER >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new HttpRequests(n0, n2, n4); }
}

Compute Compute() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  ComputationalComponent n2 = null;
}
{
  n1 = < COMPUTE >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n2 = ComputationalComponent()
  { return new Compute(n0, n2); }
}

ComputationalComponent ComputationalComponent() :
{
  // --- JTB generated node declarations ---
  Component n0 = null;
  Architecture n1 = null;
  Cores n2 = null;
  Speed n3 = null;
  Memory n4 = null;
  Cache n5 = null;
}
{
  n0 = Component()
  n1 = Architecture()
  n2 = Cores()
  n3 = Speed()
  n4 = Memory()
  n5 = Cache()
  { return new ComputationalComponent(n0, n1, n2, n3, n4, n5); }
}

Architecture Architecture() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < ARCHITECTURE >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < ARCHITECTURE_VALUE >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Architecture(n0, n2, n4); }
}

Cores Cores() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < CORES >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < NATURAL_NUMBER >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Cores(n0, n2, n4); }
}

Speed Speed() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < SPEED >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < NATURAL_NUMBER >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Speed(n0, n2, n4); }
}

Memory Memory() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < MEMORY >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < NATURAL_NUMBER >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Memory(n0, n2, n4); }
}

Cache Cache() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < CACHE >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < NATURAL_NUMBER >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Cache(n0, n2, n4); }
}

NetworkResource NetworkResource() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  CommunicationalComponent n2 = null;
}
{
  n1 = < NETWORK_RESOURCE >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n2 = CommunicationalComponent()
  { return new NetworkResource(n0, n2); }
}

CommunicationalComponent CommunicationalComponent() :
{
  // --- JTB generated node declarations ---
  Component n0 = null;
  Bandwidth n1 = null;
  NodeOptional n2 = new NodeOptional();
  Latency n3 = null;
}
{
  n0 = Component()
  n1 = Bandwidth()
  (
    n3 = Latency()
    { n2.addNode(n3); }
  )?
  { return new CommunicationalComponent(n0, n1, n2); }
}

Bandwidth Bandwidth() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < BANDWIDTH >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < NATURAL_NUMBER >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Bandwidth(n0, n2, n4); }
}

Latency Latency() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < LATENCY >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < NATURAL_NUMBER >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Latency(n0, n2, n4); }
}

StorageResource StorageResource() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  StorageComponent n2 = null;
}
{
  n1 = < STORAGE_RESOURCE >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n2 = StorageComponent()
  { return new StorageResource(n0, n2); }
}

StorageComponent StorageComponent() :
{
  // --- JTB generated node declarations ---
  Component n0 = null;
  Capacity n1 = null;
  NodeOptional n2 = new NodeOptional();
  Bandwidth n3 = null;
}
{
  n0 = Component()
  n1 = Capacity()
  (
    n3 = Bandwidth()
    { n2.addNode(n3); }
  )?
  { return new StorageComponent(n0, n1, n2); }
}

Capacity Capacity() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < CAPACITY >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < NATURAL_NUMBER >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Capacity(n0, n2, n4); }
}

Channels Channels() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeOptional n4 = new NodeOptional();
  Api n5 = null;
  NodeOptional n6 = new NodeOptional();
  Cli n7 = null;
  NodeOptional n8 = new NodeOptional();
  WebInterface n9 = null;
  NodeToken n10 = null;
  Token n11 = null;
}
{
  n1 = < CHANNELS >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < LBRACE >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  (
    n5 = Api()
    { n4.addNode(n5); }
  )?
  (
    n7 = Cli()
    { n6.addNode(n7); }
  )?
  (
    n9 = WebInterface()
    { n8.addNode(n9); }
  )?
  n11 = < RBRACE >
  { n10 = JTBToolkit.makeNodeToken(n11); }
  { return new Channels(n0, n2, n4, n6, n8, n10); }
}

Api Api() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeListOptional n4 = new NodeListOptional();
  Operation n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
}
{
  n1 = < API >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < LBRACE >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  (
    n5 = Operation()
    { n4.addNode(n5); }
  )*
  { n4.nodes.trimToSize(); }
  n7 = < RBRACE >
  { n6 = JTBToolkit.makeNodeToken(n7); }
  { return new Api(n0, n2, n4, n6); }
}

Cli Cli() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeListOptional n4 = new NodeListOptional();
  Operation n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
}
{
  n1 = < CLI >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < LBRACE >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  (
    n5 = Operation()
    { n4.addNode(n5); }
  )*
  { n4.nodes.trimToSize(); }
  n7 = < RBRACE >
  { n6 = JTBToolkit.makeNodeToken(n7); }
  { return new Cli(n0, n2, n4, n6); }
}

WebInterface WebInterface() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeListOptional n4 = new NodeListOptional();
  Operation n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
}
{
  n1 = < WebInterface >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < LBRACE >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  (
    n5 = Operation()
    { n4.addNode(n5); }
  )*
  { n4.nodes.trimToSize(); }
  n7 = < RBRACE >
  { n6 = JTBToolkit.makeNodeToken(n7); }
  { return new WebInterface(n0, n2, n4, n6); }
}

Operation Operation() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  Description n6 = null;
  Command n7 = null;
  InformationReturned n8 = null;
}
{
  n1 = < OPERATION >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  n6 = Description()
  n7 = Command()
  n8 = InformationReturned()
  { return new Operation(n0, n2, n4, n6, n7, n8); }
}

Command Command() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < COMMAND >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Command(n0, n2, n4); }
}

InformationReturned InformationReturned() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < INFORMATION_RETURNED >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < STRING >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new InformationReturned(n0, n2, n4); }
}

Version Version() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
}
{
  n1 = < VERSION >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < COLON >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < FLOATING_POINT >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  { return new Version(n0, n2, n4); }
}
