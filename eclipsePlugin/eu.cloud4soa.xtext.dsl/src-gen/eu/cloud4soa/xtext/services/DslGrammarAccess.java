/*
 * Copyright [2013] [Cloud4SOA, www.cloud4soa.eu]
 *
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
* generated by Xtext
*/

package eu.cloud4soa.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class DslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ScopeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Scope");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProfileKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cUserProfileAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cUserProfileUserProfileParserRuleCall_2_0_0 = (RuleCall)cUserProfileAssignment_2_0.eContents().get(0);
		private final Assignment cApplicationProfileAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cApplicationProfileApplicationProfileParserRuleCall_2_1_0 = (RuleCall)cApplicationProfileAssignment_2_1.eContents().get(0);
		private final Assignment cPaasOfferingProfileAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cPaasOfferingProfilePaasOfferingProfileParserRuleCall_2_2_0 = (RuleCall)cPaasOfferingProfileAssignment_2_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Scope:
		//	"profile" "{" (userProfile=UserProfile | applicationProfile=ApplicationProfile |
		//	paasOfferingProfile=PaasOfferingProfile) "}";
		public ParserRule getRule() { return rule; }

		//"profile" "{" (userProfile=UserProfile | applicationProfile=ApplicationProfile |
		//paasOfferingProfile=PaasOfferingProfile) "}"
		public Group getGroup() { return cGroup; }

		//"profile"
		public Keyword getProfileKeyword_0() { return cProfileKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//userProfile=UserProfile | applicationProfile=ApplicationProfile | paasOfferingProfile=PaasOfferingProfile
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//userProfile=UserProfile
		public Assignment getUserProfileAssignment_2_0() { return cUserProfileAssignment_2_0; }

		//UserProfile
		public RuleCall getUserProfileUserProfileParserRuleCall_2_0_0() { return cUserProfileUserProfileParserRuleCall_2_0_0; }

		//applicationProfile=ApplicationProfile
		public Assignment getApplicationProfileAssignment_2_1() { return cApplicationProfileAssignment_2_1; }

		//ApplicationProfile
		public RuleCall getApplicationProfileApplicationProfileParserRuleCall_2_1_0() { return cApplicationProfileApplicationProfileParserRuleCall_2_1_0; }

		//paasOfferingProfile=PaasOfferingProfile
		public Assignment getPaasOfferingProfileAssignment_2_2() { return cPaasOfferingProfileAssignment_2_2; }

		//PaasOfferingProfile
		public RuleCall getPaasOfferingProfilePaasOfferingProfileParserRuleCall_2_2_0() { return cPaasOfferingProfilePaasOfferingProfileParserRuleCall_2_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class UserProfileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UserProfile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cDeveloperKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Keyword cProviderKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Keyword cColonKeyword_0_1_1 = (Keyword)cGroup_0_1.eContents().get(1);
		private final Assignment cProviderAssignment_0_1_2 = (Assignment)cGroup_0_1.eContents().get(2);
		private final RuleCall cProviderProviderParserRuleCall_0_1_2_0 = (RuleCall)cProviderAssignment_0_1_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAccountInfoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAccountInfoAccountInfoParserRuleCall_2_0 = (RuleCall)cAccountInfoAssignment_2.eContents().get(0);
		private final Assignment cPersonalInfoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPersonalInfoPersonalInfosParserRuleCall_3_0 = (RuleCall)cPersonalInfoAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//UserProfile:
		//	("developer" | "provider" ":" provider=Provider) "{" accountInfo=AccountInfo personalInfo=PersonalInfos "}";
		public ParserRule getRule() { return rule; }

		//("developer" | "provider" ":" provider=Provider) "{" accountInfo=AccountInfo personalInfo=PersonalInfos "}"
		public Group getGroup() { return cGroup; }

		//"developer" | "provider" ":" provider=Provider
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"developer"
		public Keyword getDeveloperKeyword_0_0() { return cDeveloperKeyword_0_0; }

		//"provider" ":" provider=Provider
		public Group getGroup_0_1() { return cGroup_0_1; }

		//"provider"
		public Keyword getProviderKeyword_0_1_0() { return cProviderKeyword_0_1_0; }

		//":"
		public Keyword getColonKeyword_0_1_1() { return cColonKeyword_0_1_1; }

		//provider=Provider
		public Assignment getProviderAssignment_0_1_2() { return cProviderAssignment_0_1_2; }

		//Provider
		public RuleCall getProviderProviderParserRuleCall_0_1_2_0() { return cProviderProviderParserRuleCall_0_1_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//accountInfo=AccountInfo
		public Assignment getAccountInfoAssignment_2() { return cAccountInfoAssignment_2; }

		//AccountInfo
		public RuleCall getAccountInfoAccountInfoParserRuleCall_2_0() { return cAccountInfoAccountInfoParserRuleCall_2_0; }

		//personalInfo=PersonalInfos
		public Assignment getPersonalInfoAssignment_3() { return cPersonalInfoAssignment_3; }

		//PersonalInfos
		public RuleCall getPersonalInfoPersonalInfosParserRuleCall_3_0() { return cPersonalInfoPersonalInfosParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class PersonalInfosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PersonalInfos");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFirstnameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFirstNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFirstNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cFirstNameAssignment_2.eContents().get(0);
		private final Keyword cSurnameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSurnNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSurnNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cSurnNameAssignment_5.eContents().get(0);
		private final Keyword cEmailKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cEmailAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cEmailSTRINGTerminalRuleCall_8_0 = (RuleCall)cEmailAssignment_8.eContents().get(0);
		private final Assignment cBirthDayAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cBirthDayBirthdayParserRuleCall_9_0 = (RuleCall)cBirthDayAssignment_9.eContents().get(0);
		
		//PersonalInfos:
		//	"firstname" ":" firstName=STRING "surname" ":" surnName=STRING "email" ":" email=STRING birthDay=Birthday?;
		public ParserRule getRule() { return rule; }

		//"firstname" ":" firstName=STRING "surname" ":" surnName=STRING "email" ":" email=STRING birthDay=Birthday?
		public Group getGroup() { return cGroup; }

		//"firstname"
		public Keyword getFirstnameKeyword_0() { return cFirstnameKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//firstName=STRING
		public Assignment getFirstNameAssignment_2() { return cFirstNameAssignment_2; }

		//STRING
		public RuleCall getFirstNameSTRINGTerminalRuleCall_2_0() { return cFirstNameSTRINGTerminalRuleCall_2_0; }

		//"surname"
		public Keyword getSurnameKeyword_3() { return cSurnameKeyword_3; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//surnName=STRING
		public Assignment getSurnNameAssignment_5() { return cSurnNameAssignment_5; }

		//STRING
		public RuleCall getSurnNameSTRINGTerminalRuleCall_5_0() { return cSurnNameSTRINGTerminalRuleCall_5_0; }

		//"email"
		public Keyword getEmailKeyword_6() { return cEmailKeyword_6; }

		//":"
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }

		//email=STRING
		public Assignment getEmailAssignment_8() { return cEmailAssignment_8; }

		//STRING
		public RuleCall getEmailSTRINGTerminalRuleCall_8_0() { return cEmailSTRINGTerminalRuleCall_8_0; }

		//birthDay=Birthday?
		public Assignment getBirthDayAssignment_9() { return cBirthDayAssignment_9; }

		//Birthday
		public RuleCall getBirthDayBirthdayParserRuleCall_9_0() { return cBirthDayBirthdayParserRuleCall_9_0; }
	}

	public class BirthdayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Birthday");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBirthdayKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDateAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDateDATE_USTerminalRuleCall_2_0 = (RuleCall)cDateAssignment_2.eContents().get(0);
		
		//Birthday:
		//	"birthday" ":" date=DATE_US;
		public ParserRule getRule() { return rule; }

		//"birthday" ":" date=DATE_US
		public Group getGroup() { return cGroup; }

		//"birthday"
		public Keyword getBirthdayKeyword_0() { return cBirthdayKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//date=DATE_US
		public Assignment getDateAssignment_2() { return cDateAssignment_2; }

		//DATE_US
		public RuleCall getDateDATE_USTerminalRuleCall_2_0() { return cDateDATE_USTerminalRuleCall_2_0; }
	}

	public class AccountInfoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AccountInfo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUsernameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cUsernameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUsernameSTRINGTerminalRuleCall_2_0 = (RuleCall)cUsernameAssignment_2.eContents().get(0);
		private final Keyword cPasswordKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPasswordAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPasswordSTRINGTerminalRuleCall_5_0 = (RuleCall)cPasswordAssignment_5.eContents().get(0);
		
		//AccountInfo:
		//	"username" ":" username=STRING "password" ":" password=STRING;
		public ParserRule getRule() { return rule; }

		//"username" ":" username=STRING "password" ":" password=STRING
		public Group getGroup() { return cGroup; }

		//"username"
		public Keyword getUsernameKeyword_0() { return cUsernameKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//username=STRING
		public Assignment getUsernameAssignment_2() { return cUsernameAssignment_2; }

		//STRING
		public RuleCall getUsernameSTRINGTerminalRuleCall_2_0() { return cUsernameSTRINGTerminalRuleCall_2_0; }

		//"password"
		public Keyword getPasswordKeyword_3() { return cPasswordKeyword_3; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//password=STRING
		public Assignment getPasswordAssignment_5() { return cPasswordAssignment_5; }

		//STRING
		public RuleCall getPasswordSTRINGTerminalRuleCall_5_0() { return cPasswordSTRINGTerminalRuleCall_5_0; }
	}

	public class ProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Provider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cProviderAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cProviderSTRINGTerminalRuleCall_0_0 = (RuleCall)cProviderAssignment_0.eContents().get(0);
		private final Keyword cUrlKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cHomepageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cHomepageSTRINGTerminalRuleCall_3_0 = (RuleCall)cHomepageAssignment_3.eContents().get(0);
		
		//Provider:
		//	provider=STRING "url" ":" homepage=STRING;
		public ParserRule getRule() { return rule; }

		//provider=STRING "url" ":" homepage=STRING
		public Group getGroup() { return cGroup; }

		//provider=STRING
		public Assignment getProviderAssignment_0() { return cProviderAssignment_0; }

		//STRING
		public RuleCall getProviderSTRINGTerminalRuleCall_0_0() { return cProviderSTRINGTerminalRuleCall_0_0; }

		//"url"
		public Keyword getUrlKeyword_1() { return cUrlKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//homepage=STRING
		public Assignment getHomepageAssignment_3() { return cHomepageAssignment_3; }

		//STRING
		public RuleCall getHomepageSTRINGTerminalRuleCall_3_0() { return cHomepageSTRINGTerminalRuleCall_3_0; }
	}

	public class ApplicationProfileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationProfile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInfosAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cInfosApplicationInfosParserRuleCall_0_0 = (RuleCall)cInfosAssignment_0.eContents().get(0);
		private final Assignment cFileAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFileFileParserRuleCall_1_0 = (RuleCall)cFileAssignment_1.eContents().get(0);
		private final Assignment cTechnologyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTechnologyTechnologyInfoParserRuleCall_2_0 = (RuleCall)cTechnologyAssignment_2.eContents().get(0);
		
		//ApplicationProfile:
		//	infos=ApplicationInfos file=File technology=TechnologyInfo;
		public ParserRule getRule() { return rule; }

		//infos=ApplicationInfos file=File technology=TechnologyInfo
		public Group getGroup() { return cGroup; }

		//infos=ApplicationInfos
		public Assignment getInfosAssignment_0() { return cInfosAssignment_0; }

		//ApplicationInfos
		public RuleCall getInfosApplicationInfosParserRuleCall_0_0() { return cInfosApplicationInfosParserRuleCall_0_0; }

		//file=File
		public Assignment getFileAssignment_1() { return cFileAssignment_1; }

		//File
		public RuleCall getFileFileParserRuleCall_1_0() { return cFileFileParserRuleCall_1_0; }

		//technology=TechnologyInfo
		public Assignment getTechnologyAssignment_2() { return cTechnologyAssignment_2; }

		//TechnologyInfo
		public RuleCall getTechnologyTechnologyInfoParserRuleCall_2_0() { return cTechnologyTechnologyInfoParserRuleCall_2_0; }
	}

	public class ApplicationInfosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationInfos");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApplicationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cApplicationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cApplicationSTRINGTerminalRuleCall_2_0 = (RuleCall)cApplicationAssignment_2.eContents().get(0);
		private final Assignment cVersionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVersionVersionParserRuleCall_3_0 = (RuleCall)cVersionAssignment_3.eContents().get(0);
		private final Assignment cCodeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCodeApplicationCodeParserRuleCall_4_0 = (RuleCall)cCodeAssignment_4.eContents().get(0);
		
		//ApplicationInfos:
		//	"application" ":" application=STRING version=Version code=ApplicationCode?;
		public ParserRule getRule() { return rule; }

		//"application" ":" application=STRING version=Version code=ApplicationCode?
		public Group getGroup() { return cGroup; }

		//"application"
		public Keyword getApplicationKeyword_0() { return cApplicationKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//application=STRING
		public Assignment getApplicationAssignment_2() { return cApplicationAssignment_2; }

		//STRING
		public RuleCall getApplicationSTRINGTerminalRuleCall_2_0() { return cApplicationSTRINGTerminalRuleCall_2_0; }

		//version=Version
		public Assignment getVersionAssignment_3() { return cVersionAssignment_3; }

		//Version
		public RuleCall getVersionVersionParserRuleCall_3_0() { return cVersionVersionParserRuleCall_3_0; }

		//code=ApplicationCode?
		public Assignment getCodeAssignment_4() { return cCodeAssignment_4; }

		//ApplicationCode
		public RuleCall getCodeApplicationCodeParserRuleCall_4_0() { return cCodeApplicationCodeParserRuleCall_4_0; }
	}

	public class ApplicationCodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationCode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApplication_codeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cApplicationCodeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cApplicationCodeSTRINGTerminalRuleCall_2_0 = (RuleCall)cApplicationCodeAssignment_2.eContents().get(0);
		
		//ApplicationCode:
		//	"application_code" ":" applicationCode=STRING;
		public ParserRule getRule() { return rule; }

		//"application_code" ":" applicationCode=STRING
		public Group getGroup() { return cGroup; }

		//"application_code"
		public Keyword getApplication_codeKeyword_0() { return cApplication_codeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//applicationCode=STRING
		public Assignment getApplicationCodeAssignment_2() { return cApplicationCodeAssignment_2; }

		//STRING
		public RuleCall getApplicationCodeSTRINGTerminalRuleCall_2_0() { return cApplicationCodeSTRINGTerminalRuleCall_2_0; }
	}

	public class PaasOfferingProfileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PaasOfferingProfile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPaasOfferingInfosAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPaasOfferingInfosPaasOfferingInfosParserRuleCall_0_0 = (RuleCall)cPaasOfferingInfosAssignment_0.eContents().get(0);
		private final Assignment cChannelsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cChannelsChannelsParserRuleCall_1_0 = (RuleCall)cChannelsAssignment_1.eContents().get(0);
		private final Assignment cTechnologyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTechnologyTechnologyInfoParserRuleCall_2_0 = (RuleCall)cTechnologyAssignment_2.eContents().get(0);
		
		//PaasOfferingProfile:
		//	paasOfferingInfos=PaasOfferingInfos channels=Channels technology=TechnologyInfo;
		public ParserRule getRule() { return rule; }

		//paasOfferingInfos=PaasOfferingInfos channels=Channels technology=TechnologyInfo
		public Group getGroup() { return cGroup; }

		//paasOfferingInfos=PaasOfferingInfos
		public Assignment getPaasOfferingInfosAssignment_0() { return cPaasOfferingInfosAssignment_0; }

		//PaasOfferingInfos
		public RuleCall getPaasOfferingInfosPaasOfferingInfosParserRuleCall_0_0() { return cPaasOfferingInfosPaasOfferingInfosParserRuleCall_0_0; }

		//channels=Channels
		public Assignment getChannelsAssignment_1() { return cChannelsAssignment_1; }

		//Channels
		public RuleCall getChannelsChannelsParserRuleCall_1_0() { return cChannelsChannelsParserRuleCall_1_0; }

		//technology=TechnologyInfo
		public Assignment getTechnologyAssignment_2() { return cTechnologyAssignment_2; }

		//TechnologyInfo
		public RuleCall getTechnologyTechnologyInfoParserRuleCall_2_0() { return cTechnologyTechnologyInfoParserRuleCall_2_0; }
	}

	public class PaasOfferingInfosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PaasOfferingInfos");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPaas_offeringKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPaasOfferingAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPaasOfferingSTRINGTerminalRuleCall_2_0 = (RuleCall)cPaasOfferingAssignment_2.eContents().get(0);
		
		//PaasOfferingInfos:
		//	"paas_offering" ":" paasOffering=STRING;
		public ParserRule getRule() { return rule; }

		//"paas_offering" ":" paasOffering=STRING
		public Group getGroup() { return cGroup; }

		//"paas_offering"
		public Keyword getPaas_offeringKeyword_0() { return cPaas_offeringKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//paasOffering=STRING
		public Assignment getPaasOfferingAssignment_2() { return cPaasOfferingAssignment_2; }

		//STRING
		public RuleCall getPaasOfferingSTRINGTerminalRuleCall_2_0() { return cPaasOfferingSTRINGTerminalRuleCall_2_0; }
	}

	public class FileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "File");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFile_nameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFileNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFileNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cFileNameAssignment_2.eContents().get(0);
		private final Assignment cDimensionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDimensionFileDimensionParserRuleCall_3_0 = (RuleCall)cDimensionAssignment_3.eContents().get(0);
		
		//File:
		//	"file_name" ":" fileName=STRING dimension=FileDimension?;
		public ParserRule getRule() { return rule; }

		//"file_name" ":" fileName=STRING dimension=FileDimension?
		public Group getGroup() { return cGroup; }

		//"file_name"
		public Keyword getFile_nameKeyword_0() { return cFile_nameKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//fileName=STRING
		public Assignment getFileNameAssignment_2() { return cFileNameAssignment_2; }

		//STRING
		public RuleCall getFileNameSTRINGTerminalRuleCall_2_0() { return cFileNameSTRINGTerminalRuleCall_2_0; }

		//dimension=FileDimension?
		public Assignment getDimensionAssignment_3() { return cDimensionAssignment_3; }

		//FileDimension
		public RuleCall getDimensionFileDimensionParserRuleCall_3_0() { return cDimensionFileDimensionParserRuleCall_3_0; }
	}

	public class FileDimensionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FileDimension");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSizeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSizeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSizeNATURAL_NUMBERTerminalRuleCall_2_0 = (RuleCall)cSizeAssignment_2.eContents().get(0);
		private final Assignment cDigestAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDigestDigestParserRuleCall_3_0 = (RuleCall)cDigestAssignment_3.eContents().get(0);
		
		//FileDimension:
		//	"size" ":" size=NATURAL_NUMBER digest=Digest?;
		public ParserRule getRule() { return rule; }

		//"size" ":" size=NATURAL_NUMBER digest=Digest?
		public Group getGroup() { return cGroup; }

		//"size"
		public Keyword getSizeKeyword_0() { return cSizeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//size=NATURAL_NUMBER
		public Assignment getSizeAssignment_2() { return cSizeAssignment_2; }

		//NATURAL_NUMBER
		public RuleCall getSizeNATURAL_NUMBERTerminalRuleCall_2_0() { return cSizeNATURAL_NUMBERTerminalRuleCall_2_0; }

		//digest=Digest?
		public Assignment getDigestAssignment_3() { return cDigestAssignment_3; }

		//Digest
		public RuleCall getDigestDigestParserRuleCall_3_0() { return cDigestDigestParserRuleCall_3_0; }
	}

	public class DigestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Digest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDigestKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDigestAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDigestSTRINGTerminalRuleCall_2_0 = (RuleCall)cDigestAssignment_2.eContents().get(0);
		
		//Digest:
		//	"digest" ":" digest=STRING;
		public ParserRule getRule() { return rule; }

		//"digest" ":" digest=STRING
		public Group getGroup() { return cGroup; }

		//"digest"
		public Keyword getDigestKeyword_0() { return cDigestKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//digest=STRING
		public Assignment getDigestAssignment_2() { return cDigestAssignment_2; }

		//STRING
		public RuleCall getDigestSTRINGTerminalRuleCall_2_0() { return cDigestSTRINGTerminalRuleCall_2_0; }
	}

	public class TechnologyInfoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TechnologyInfo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cProgrammingLanguageAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cProgrammingLanguageProgrammingLanguageParserRuleCall_0_0 = (RuleCall)cProgrammingLanguageAssignment_0.eContents().get(0);
		private final Assignment cSoftwareAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSoftwareSoftwareParserRuleCall_1_0 = (RuleCall)cSoftwareAssignment_1.eContents().get(0);
		private final Assignment cHardwareAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHardwareHardwareParserRuleCall_2_0 = (RuleCall)cHardwareAssignment_2.eContents().get(0);
		
		//TechnologyInfo:
		//	programmingLanguage=ProgrammingLanguage software=Software hardware=Hardware;
		public ParserRule getRule() { return rule; }

		//programmingLanguage=ProgrammingLanguage software=Software hardware=Hardware
		public Group getGroup() { return cGroup; }

		//programmingLanguage=ProgrammingLanguage
		public Assignment getProgrammingLanguageAssignment_0() { return cProgrammingLanguageAssignment_0; }

		//ProgrammingLanguage
		public RuleCall getProgrammingLanguageProgrammingLanguageParserRuleCall_0_0() { return cProgrammingLanguageProgrammingLanguageParserRuleCall_0_0; }

		//software=Software
		public Assignment getSoftwareAssignment_1() { return cSoftwareAssignment_1; }

		//Software
		public RuleCall getSoftwareSoftwareParserRuleCall_1_0() { return cSoftwareSoftwareParserRuleCall_1_0; }

		//hardware=Hardware
		public Assignment getHardwareAssignment_2() { return cHardwareAssignment_2; }

		//Hardware
		public RuleCall getHardwareHardwareParserRuleCall_2_0() { return cHardwareHardwareParserRuleCall_2_0; }
	}

	public class ProgrammingLanguageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProgrammingLanguage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProgramming_languageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProgrammingLanguageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cProgrammingLanguageSTRINGTerminalRuleCall_2_0 = (RuleCall)cProgrammingLanguageAssignment_2.eContents().get(0);
		private final Assignment cVersionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVersionVersionParserRuleCall_3_0 = (RuleCall)cVersionAssignment_3.eContents().get(0);
		
		//ProgrammingLanguage:
		//	"programming_language" ":" programmingLanguage=STRING version=Version;
		public ParserRule getRule() { return rule; }

		//"programming_language" ":" programmingLanguage=STRING version=Version
		public Group getGroup() { return cGroup; }

		//"programming_language"
		public Keyword getProgramming_languageKeyword_0() { return cProgramming_languageKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//programmingLanguage=STRING
		public Assignment getProgrammingLanguageAssignment_2() { return cProgrammingLanguageAssignment_2; }

		//STRING
		public RuleCall getProgrammingLanguageSTRINGTerminalRuleCall_2_0() { return cProgrammingLanguageSTRINGTerminalRuleCall_2_0; }

		//version=Version
		public Assignment getVersionAssignment_3() { return cVersionAssignment_3; }

		//Version
		public RuleCall getVersionVersionParserRuleCall_3_0() { return cVersionVersionParserRuleCall_3_0; }
	}

	public class SoftwareElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Software");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSoftwareKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cCategoryAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cCategorySoftwareCategoryParserRuleCall_2_0_0 = (RuleCall)cCategoryAssignment_2_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cComponentAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cComponentSoftwareComponentParserRuleCall_2_2_0 = (RuleCall)cComponentAssignment_2_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Software:
		//	"software" "{" (category+=SoftwareCategory "{" component+=SoftwareComponent+ "}")+ "}";
		public ParserRule getRule() { return rule; }

		//"software" "{" (category+=SoftwareCategory "{" component+=SoftwareComponent+ "}")+ "}"
		public Group getGroup() { return cGroup; }

		//"software"
		public Keyword getSoftwareKeyword_0() { return cSoftwareKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//(category+=SoftwareCategory "{" component+=SoftwareComponent+ "}")+
		public Group getGroup_2() { return cGroup_2; }

		//category+=SoftwareCategory
		public Assignment getCategoryAssignment_2_0() { return cCategoryAssignment_2_0; }

		//SoftwareCategory
		public RuleCall getCategorySoftwareCategoryParserRuleCall_2_0_0() { return cCategorySoftwareCategoryParserRuleCall_2_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }

		//component+=SoftwareComponent+
		public Assignment getComponentAssignment_2_2() { return cComponentAssignment_2_2; }

		//SoftwareComponent
		public RuleCall getComponentSoftwareComponentParserRuleCall_2_2_0() { return cComponentSoftwareComponentParserRuleCall_2_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class SoftwareCategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SoftwareCategory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCategoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCategoryAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCategorySTRINGTerminalRuleCall_2_0 = (RuleCall)cCategoryAssignment_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionDescriptionParserRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		
		//SoftwareCategory:
		//	"category" ":" category=STRING description=Description;
		public ParserRule getRule() { return rule; }

		//"category" ":" category=STRING description=Description
		public Group getGroup() { return cGroup; }

		//"category"
		public Keyword getCategoryKeyword_0() { return cCategoryKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//category=STRING
		public Assignment getCategoryAssignment_2() { return cCategoryAssignment_2; }

		//STRING
		public RuleCall getCategorySTRINGTerminalRuleCall_2_0() { return cCategorySTRINGTerminalRuleCall_2_0; }

		//description=Description
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }

		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_3_0() { return cDescriptionDescriptionParserRuleCall_3_0; }
	}

	public class SoftwareComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SoftwareComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cComponentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cComponentComponentParserRuleCall_0_0 = (RuleCall)cComponentAssignment_0.eContents().get(0);
		private final Assignment cVersionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVersionVersionParserRuleCall_1_0 = (RuleCall)cVersionAssignment_1.eContents().get(0);
		private final Assignment cLicenseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLicenseLicenseParserRuleCall_2_0 = (RuleCall)cLicenseAssignment_2.eContents().get(0);
		
		//SoftwareComponent:
		//	component=Component version=Version license=License?;
		public ParserRule getRule() { return rule; }

		//component=Component version=Version license=License?
		public Group getGroup() { return cGroup; }

		//component=Component
		public Assignment getComponentAssignment_0() { return cComponentAssignment_0; }

		//Component
		public RuleCall getComponentComponentParserRuleCall_0_0() { return cComponentComponentParserRuleCall_0_0; }

		//version=Version
		public Assignment getVersionAssignment_1() { return cVersionAssignment_1; }

		//Version
		public RuleCall getVersionVersionParserRuleCall_1_0() { return cVersionVersionParserRuleCall_1_0; }

		//license=License?
		public Assignment getLicenseAssignment_2() { return cLicenseAssignment_2; }

		//License
		public RuleCall getLicenseLicenseParserRuleCall_2_0() { return cLicenseLicenseParserRuleCall_2_0; }
	}

	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Component");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cComponentAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cComponentSTRINGTerminalRuleCall_2_0 = (RuleCall)cComponentAssignment_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionDescriptionParserRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		
		//Component:
		//	"component" ":" component=STRING description=Description;
		public ParserRule getRule() { return rule; }

		//"component" ":" component=STRING description=Description
		public Group getGroup() { return cGroup; }

		//"component"
		public Keyword getComponentKeyword_0() { return cComponentKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//component=STRING
		public Assignment getComponentAssignment_2() { return cComponentAssignment_2; }

		//STRING
		public RuleCall getComponentSTRINGTerminalRuleCall_2_0() { return cComponentSTRINGTerminalRuleCall_2_0; }

		//description=Description
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }

		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_3_0() { return cDescriptionDescriptionParserRuleCall_3_0; }
	}

	public class DescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Description");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDescriptionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		
		//Description:
		//	"description" ":" description=STRING;
		public ParserRule getRule() { return rule; }

		//"description" ":" description=STRING
		public Group getGroup() { return cGroup; }

		//"description"
		public Keyword getDescriptionKeyword_0() { return cDescriptionKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//description=STRING
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_0() { return cDescriptionSTRINGTerminalRuleCall_2_0; }
	}

	public class LicenseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "License");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLicenseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLicenseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cLicenseAlternatives_2_0 = (Alternatives)cLicenseAssignment_2.eContents().get(0);
		private final Keyword cLicenseGPLKeyword_2_0_0 = (Keyword)cLicenseAlternatives_2_0.eContents().get(0);
		private final Keyword cLicenseLGPLKeyword_2_0_1 = (Keyword)cLicenseAlternatives_2_0.eContents().get(1);
		private final Keyword cLicenseBSDKeyword_2_0_2 = (Keyword)cLicenseAlternatives_2_0.eContents().get(2);
		private final Keyword cLicenseMITKeyword_2_0_3 = (Keyword)cLicenseAlternatives_2_0.eContents().get(3);
		
		//License:
		//	"license" ":" license=("GPL" | "LGPL" | "BSD" | "MIT");
		public ParserRule getRule() { return rule; }

		//"license" ":" license=("GPL" | "LGPL" | "BSD" | "MIT")
		public Group getGroup() { return cGroup; }

		//"license"
		public Keyword getLicenseKeyword_0() { return cLicenseKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//license=("GPL" | "LGPL" | "BSD" | "MIT")
		public Assignment getLicenseAssignment_2() { return cLicenseAssignment_2; }

		//"GPL" | "LGPL" | "BSD" | "MIT"
		public Alternatives getLicenseAlternatives_2_0() { return cLicenseAlternatives_2_0; }

		//"GPL"
		public Keyword getLicenseGPLKeyword_2_0_0() { return cLicenseGPLKeyword_2_0_0; }

		//"LGPL"
		public Keyword getLicenseLGPLKeyword_2_0_1() { return cLicenseLGPLKeyword_2_0_1; }

		//"BSD"
		public Keyword getLicenseBSDKeyword_2_0_2() { return cLicenseBSDKeyword_2_0_2; }

		//"MIT"
		public Keyword getLicenseMITKeyword_2_0_3() { return cLicenseMITKeyword_2_0_3; }
	}

	public class HardwareElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Hardware");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHardwareKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cBoxAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cBoxBoxParserRuleCall_2_0_0 = (RuleCall)cBoxAssignment_2_0.eContents().get(0);
		private final Assignment cComputeAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cComputeComputeParserRuleCall_2_1_0 = (RuleCall)cComputeAssignment_2_1.eContents().get(0);
		private final Assignment cNetworkResourceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNetworkResourceNetworkResourceParserRuleCall_3_0 = (RuleCall)cNetworkResourceAssignment_3.eContents().get(0);
		private final Assignment cStorageResourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStorageResourceStorageResourceParserRuleCall_4_0 = (RuleCall)cStorageResourceAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Hardware:
		//	"hardware" "{" (box=Box | compute=Compute)? networkResource+=NetworkResource* storageResource+=StorageResource* "}";
		public ParserRule getRule() { return rule; }

		//"hardware" "{" (box=Box | compute=Compute)? networkResource+=NetworkResource* storageResource+=StorageResource* "}"
		public Group getGroup() { return cGroup; }

		//"hardware"
		public Keyword getHardwareKeyword_0() { return cHardwareKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//(box=Box | compute=Compute)?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//box=Box
		public Assignment getBoxAssignment_2_0() { return cBoxAssignment_2_0; }

		//Box
		public RuleCall getBoxBoxParserRuleCall_2_0_0() { return cBoxBoxParserRuleCall_2_0_0; }

		//compute=Compute
		public Assignment getComputeAssignment_2_1() { return cComputeAssignment_2_1; }

		//Compute
		public RuleCall getComputeComputeParserRuleCall_2_1_0() { return cComputeComputeParserRuleCall_2_1_0; }

		//networkResource+=NetworkResource*
		public Assignment getNetworkResourceAssignment_3() { return cNetworkResourceAssignment_3; }

		//NetworkResource
		public RuleCall getNetworkResourceNetworkResourceParserRuleCall_3_0() { return cNetworkResourceNetworkResourceParserRuleCall_3_0; }

		//storageResource+=StorageResource*
		public Assignment getStorageResourceAssignment_4() { return cStorageResourceAssignment_4; }

		//StorageResource
		public RuleCall getStorageResourceStorageResourceParserRuleCall_4_0() { return cStorageResourceStorageResourceParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class BoxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Box");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBoxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cBoxAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBoxBoxComponentParserRuleCall_1_0 = (RuleCall)cBoxAssignment_1.eContents().get(0);
		
		//Box:
		//	"box" box=BoxComponent;
		public ParserRule getRule() { return rule; }

		//"box" box=BoxComponent
		public Group getGroup() { return cGroup; }

		//"box"
		public Keyword getBoxKeyword_0() { return cBoxKeyword_0; }

		//box=BoxComponent
		public Assignment getBoxAssignment_1() { return cBoxAssignment_1; }

		//BoxComponent
		public RuleCall getBoxBoxComponentParserRuleCall_1_0() { return cBoxBoxComponentParserRuleCall_1_0; }
	}

	public class BoxComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BoxComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cComponentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cComponentComponentParserRuleCall_0_0 = (RuleCall)cComponentAssignment_0.eContents().get(0);
		private final Assignment cHttpRequestAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cHttpRequestHttpRequestsParserRuleCall_1_0 = (RuleCall)cHttpRequestAssignment_1.eContents().get(0);
		
		//BoxComponent:
		//	component=Component httpRequest=HttpRequests;
		public ParserRule getRule() { return rule; }

		//component=Component httpRequest=HttpRequests
		public Group getGroup() { return cGroup; }

		//component=Component
		public Assignment getComponentAssignment_0() { return cComponentAssignment_0; }

		//Component
		public RuleCall getComponentComponentParserRuleCall_0_0() { return cComponentComponentParserRuleCall_0_0; }

		//httpRequest=HttpRequests
		public Assignment getHttpRequestAssignment_1() { return cHttpRequestAssignment_1; }

		//HttpRequests
		public RuleCall getHttpRequestHttpRequestsParserRuleCall_1_0() { return cHttpRequestHttpRequestsParserRuleCall_1_0; }
	}

	public class HttpRequestsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HttpRequests");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHttp_requestsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cHttp_requestsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHttp_requestsNATURAL_NUMBERTerminalRuleCall_2_0 = (RuleCall)cHttp_requestsAssignment_2.eContents().get(0);
		
		//HttpRequests:
		//	"http_requests" ":" http_requests=NATURAL_NUMBER;
		public ParserRule getRule() { return rule; }

		//"http_requests" ":" http_requests=NATURAL_NUMBER
		public Group getGroup() { return cGroup; }

		//"http_requests"
		public Keyword getHttp_requestsKeyword_0() { return cHttp_requestsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//http_requests=NATURAL_NUMBER
		public Assignment getHttp_requestsAssignment_2() { return cHttp_requestsAssignment_2; }

		//NATURAL_NUMBER
		public RuleCall getHttp_requestsNATURAL_NUMBERTerminalRuleCall_2_0() { return cHttp_requestsNATURAL_NUMBERTerminalRuleCall_2_0; }
	}

	public class ComputeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Compute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComputeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cComputeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cComputeComputationalComponentParserRuleCall_1_0 = (RuleCall)cComputeAssignment_1.eContents().get(0);
		
		//Compute:
		//	"compute" compute=ComputationalComponent;
		public ParserRule getRule() { return rule; }

		//"compute" compute=ComputationalComponent
		public Group getGroup() { return cGroup; }

		//"compute"
		public Keyword getComputeKeyword_0() { return cComputeKeyword_0; }

		//compute=ComputationalComponent
		public Assignment getComputeAssignment_1() { return cComputeAssignment_1; }

		//ComputationalComponent
		public RuleCall getComputeComputationalComponentParserRuleCall_1_0() { return cComputeComputationalComponentParserRuleCall_1_0; }
	}

	public class ComputationalComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComputationalComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cComponentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cComponentComponentParserRuleCall_0_0 = (RuleCall)cComponentAssignment_0.eContents().get(0);
		private final Assignment cArchitectureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cArchitectureArchitectureParserRuleCall_1_0 = (RuleCall)cArchitectureAssignment_1.eContents().get(0);
		private final Assignment cCoresAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCoresCoresParserRuleCall_2_0 = (RuleCall)cCoresAssignment_2.eContents().get(0);
		private final Assignment cSpeedAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpeedSpeedParserRuleCall_3_0 = (RuleCall)cSpeedAssignment_3.eContents().get(0);
		private final Assignment cMemoryAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMemoryMemoryParserRuleCall_4_0 = (RuleCall)cMemoryAssignment_4.eContents().get(0);
		private final Assignment cCacheAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCacheCacheParserRuleCall_5_0 = (RuleCall)cCacheAssignment_5.eContents().get(0);
		
		//ComputationalComponent:
		//	component=Component architecture=Architecture cores=Cores speed=Speed memory=Memory cache=Cache;
		public ParserRule getRule() { return rule; }

		//component=Component architecture=Architecture cores=Cores speed=Speed memory=Memory cache=Cache
		public Group getGroup() { return cGroup; }

		//component=Component
		public Assignment getComponentAssignment_0() { return cComponentAssignment_0; }

		//Component
		public RuleCall getComponentComponentParserRuleCall_0_0() { return cComponentComponentParserRuleCall_0_0; }

		//architecture=Architecture
		public Assignment getArchitectureAssignment_1() { return cArchitectureAssignment_1; }

		//Architecture
		public RuleCall getArchitectureArchitectureParserRuleCall_1_0() { return cArchitectureArchitectureParserRuleCall_1_0; }

		//cores=Cores
		public Assignment getCoresAssignment_2() { return cCoresAssignment_2; }

		//Cores
		public RuleCall getCoresCoresParserRuleCall_2_0() { return cCoresCoresParserRuleCall_2_0; }

		//speed=Speed
		public Assignment getSpeedAssignment_3() { return cSpeedAssignment_3; }

		//Speed
		public RuleCall getSpeedSpeedParserRuleCall_3_0() { return cSpeedSpeedParserRuleCall_3_0; }

		//memory=Memory
		public Assignment getMemoryAssignment_4() { return cMemoryAssignment_4; }

		//Memory
		public RuleCall getMemoryMemoryParserRuleCall_4_0() { return cMemoryMemoryParserRuleCall_4_0; }

		//cache=Cache
		public Assignment getCacheAssignment_5() { return cCacheAssignment_5; }

		//Cache
		public RuleCall getCacheCacheParserRuleCall_5_0() { return cCacheCacheParserRuleCall_5_0; }
	}

	public class ArchitectureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Architecture");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArchitectureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cArchitectureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cArchitectureAlternatives_2_0 = (Alternatives)cArchitectureAssignment_2.eContents().get(0);
		private final Keyword cArchitectureX86Keyword_2_0_0 = (Keyword)cArchitectureAlternatives_2_0.eContents().get(0);
		private final Keyword cArchitectureX64Keyword_2_0_1 = (Keyword)cArchitectureAlternatives_2_0.eContents().get(1);
		
		//Architecture:
		//	"architecture" ":" architecture=("x86" | "x64");
		public ParserRule getRule() { return rule; }

		//"architecture" ":" architecture=("x86" | "x64")
		public Group getGroup() { return cGroup; }

		//"architecture"
		public Keyword getArchitectureKeyword_0() { return cArchitectureKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//architecture=("x86" | "x64")
		public Assignment getArchitectureAssignment_2() { return cArchitectureAssignment_2; }

		//"x86" | "x64"
		public Alternatives getArchitectureAlternatives_2_0() { return cArchitectureAlternatives_2_0; }

		//"x86"
		public Keyword getArchitectureX86Keyword_2_0_0() { return cArchitectureX86Keyword_2_0_0; }

		//"x64"
		public Keyword getArchitectureX64Keyword_2_0_1() { return cArchitectureX64Keyword_2_0_1; }
	}

	public class CoresElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Cores");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCoresKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCoresAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCoresNATURAL_NUMBERTerminalRuleCall_2_0 = (RuleCall)cCoresAssignment_2.eContents().get(0);
		
		//Cores:
		//	"cores" ":" cores=NATURAL_NUMBER;
		public ParserRule getRule() { return rule; }

		//"cores" ":" cores=NATURAL_NUMBER
		public Group getGroup() { return cGroup; }

		//"cores"
		public Keyword getCoresKeyword_0() { return cCoresKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//cores=NATURAL_NUMBER
		public Assignment getCoresAssignment_2() { return cCoresAssignment_2; }

		//NATURAL_NUMBER
		public RuleCall getCoresNATURAL_NUMBERTerminalRuleCall_2_0() { return cCoresNATURAL_NUMBERTerminalRuleCall_2_0; }
	}

	public class SpeedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Speed");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpeedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSpeedAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSpeedNATURAL_NUMBERTerminalRuleCall_2_0 = (RuleCall)cSpeedAssignment_2.eContents().get(0);
		
		//Speed:
		//	"speed" ":" speed=NATURAL_NUMBER;
		public ParserRule getRule() { return rule; }

		//"speed" ":" speed=NATURAL_NUMBER
		public Group getGroup() { return cGroup; }

		//"speed"
		public Keyword getSpeedKeyword_0() { return cSpeedKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//speed=NATURAL_NUMBER
		public Assignment getSpeedAssignment_2() { return cSpeedAssignment_2; }

		//NATURAL_NUMBER
		public RuleCall getSpeedNATURAL_NUMBERTerminalRuleCall_2_0() { return cSpeedNATURAL_NUMBERTerminalRuleCall_2_0; }
	}

	public class MemoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Memory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMemoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMemoryAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMemoryNATURAL_NUMBERTerminalRuleCall_2_0 = (RuleCall)cMemoryAssignment_2.eContents().get(0);
		
		//Memory:
		//	"memory" ":" memory=NATURAL_NUMBER;
		public ParserRule getRule() { return rule; }

		//"memory" ":" memory=NATURAL_NUMBER
		public Group getGroup() { return cGroup; }

		//"memory"
		public Keyword getMemoryKeyword_0() { return cMemoryKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//memory=NATURAL_NUMBER
		public Assignment getMemoryAssignment_2() { return cMemoryAssignment_2; }

		//NATURAL_NUMBER
		public RuleCall getMemoryNATURAL_NUMBERTerminalRuleCall_2_0() { return cMemoryNATURAL_NUMBERTerminalRuleCall_2_0; }
	}

	public class CacheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Cache");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCacheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCacheAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCacheNATURAL_NUMBERTerminalRuleCall_2_0 = (RuleCall)cCacheAssignment_2.eContents().get(0);
		
		//Cache:
		//	"cache" ":" cache=NATURAL_NUMBER;
		public ParserRule getRule() { return rule; }

		//"cache" ":" cache=NATURAL_NUMBER
		public Group getGroup() { return cGroup; }

		//"cache"
		public Keyword getCacheKeyword_0() { return cCacheKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//cache=NATURAL_NUMBER
		public Assignment getCacheAssignment_2() { return cCacheAssignment_2; }

		//NATURAL_NUMBER
		public RuleCall getCacheNATURAL_NUMBERTerminalRuleCall_2_0() { return cCacheNATURAL_NUMBERTerminalRuleCall_2_0; }
	}

	public class NetworkResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NetworkResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNetwork_resourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNetworkResourceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNetworkResourceCommunicationalComponentParserRuleCall_1_0 = (RuleCall)cNetworkResourceAssignment_1.eContents().get(0);
		
		//NetworkResource:
		//	"network_resource" networkResource=CommunicationalComponent;
		public ParserRule getRule() { return rule; }

		//"network_resource" networkResource=CommunicationalComponent
		public Group getGroup() { return cGroup; }

		//"network_resource"
		public Keyword getNetwork_resourceKeyword_0() { return cNetwork_resourceKeyword_0; }

		//networkResource=CommunicationalComponent
		public Assignment getNetworkResourceAssignment_1() { return cNetworkResourceAssignment_1; }

		//CommunicationalComponent
		public RuleCall getNetworkResourceCommunicationalComponentParserRuleCall_1_0() { return cNetworkResourceCommunicationalComponentParserRuleCall_1_0; }
	}

	public class CommunicationalComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CommunicationalComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cComponentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cComponentComponentParserRuleCall_0_0 = (RuleCall)cComponentAssignment_0.eContents().get(0);
		private final Assignment cBandwidthAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBandwidthBandwidthParserRuleCall_1_0 = (RuleCall)cBandwidthAssignment_1.eContents().get(0);
		private final Assignment cLatencyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLatencyLatencyParserRuleCall_2_0 = (RuleCall)cLatencyAssignment_2.eContents().get(0);
		
		//CommunicationalComponent:
		//	component=Component bandwidth=Bandwidth latency=Latency?;
		public ParserRule getRule() { return rule; }

		//component=Component bandwidth=Bandwidth latency=Latency?
		public Group getGroup() { return cGroup; }

		//component=Component
		public Assignment getComponentAssignment_0() { return cComponentAssignment_0; }

		//Component
		public RuleCall getComponentComponentParserRuleCall_0_0() { return cComponentComponentParserRuleCall_0_0; }

		//bandwidth=Bandwidth
		public Assignment getBandwidthAssignment_1() { return cBandwidthAssignment_1; }

		//Bandwidth
		public RuleCall getBandwidthBandwidthParserRuleCall_1_0() { return cBandwidthBandwidthParserRuleCall_1_0; }

		//latency=Latency?
		public Assignment getLatencyAssignment_2() { return cLatencyAssignment_2; }

		//Latency
		public RuleCall getLatencyLatencyParserRuleCall_2_0() { return cLatencyLatencyParserRuleCall_2_0; }
	}

	public class BandwidthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Bandwidth");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBandwidthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cBandwidthAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBandwidthNATURAL_NUMBERTerminalRuleCall_2_0 = (RuleCall)cBandwidthAssignment_2.eContents().get(0);
		
		//Bandwidth:
		//	"bandwidth" ":" bandwidth=NATURAL_NUMBER;
		public ParserRule getRule() { return rule; }

		//"bandwidth" ":" bandwidth=NATURAL_NUMBER
		public Group getGroup() { return cGroup; }

		//"bandwidth"
		public Keyword getBandwidthKeyword_0() { return cBandwidthKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//bandwidth=NATURAL_NUMBER
		public Assignment getBandwidthAssignment_2() { return cBandwidthAssignment_2; }

		//NATURAL_NUMBER
		public RuleCall getBandwidthNATURAL_NUMBERTerminalRuleCall_2_0() { return cBandwidthNATURAL_NUMBERTerminalRuleCall_2_0; }
	}

	public class LatencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Latency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLatencyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLatencyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLatencyNATURAL_NUMBERTerminalRuleCall_2_0 = (RuleCall)cLatencyAssignment_2.eContents().get(0);
		
		//Latency:
		//	"latency" ":" latency=NATURAL_NUMBER;
		public ParserRule getRule() { return rule; }

		//"latency" ":" latency=NATURAL_NUMBER
		public Group getGroup() { return cGroup; }

		//"latency"
		public Keyword getLatencyKeyword_0() { return cLatencyKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//latency=NATURAL_NUMBER
		public Assignment getLatencyAssignment_2() { return cLatencyAssignment_2; }

		//NATURAL_NUMBER
		public RuleCall getLatencyNATURAL_NUMBERTerminalRuleCall_2_0() { return cLatencyNATURAL_NUMBERTerminalRuleCall_2_0; }
	}

	public class StorageResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StorageResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStorage_resourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStorageComponentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStorageComponentStorageComponentParserRuleCall_1_0 = (RuleCall)cStorageComponentAssignment_1.eContents().get(0);
		
		//StorageResource:
		//	"storage_resource" storageComponent=StorageComponent;
		public ParserRule getRule() { return rule; }

		//"storage_resource" storageComponent=StorageComponent
		public Group getGroup() { return cGroup; }

		//"storage_resource"
		public Keyword getStorage_resourceKeyword_0() { return cStorage_resourceKeyword_0; }

		//storageComponent=StorageComponent
		public Assignment getStorageComponentAssignment_1() { return cStorageComponentAssignment_1; }

		//StorageComponent
		public RuleCall getStorageComponentStorageComponentParserRuleCall_1_0() { return cStorageComponentStorageComponentParserRuleCall_1_0; }
	}

	public class StorageComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StorageComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cComponentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cComponentComponentParserRuleCall_0_0 = (RuleCall)cComponentAssignment_0.eContents().get(0);
		private final Assignment cCapacityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCapacityCapacityParserRuleCall_1_0 = (RuleCall)cCapacityAssignment_1.eContents().get(0);
		private final Assignment cBandwidthAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBandwidthBandwidthParserRuleCall_2_0 = (RuleCall)cBandwidthAssignment_2.eContents().get(0);
		
		//StorageComponent:
		//	component=Component capacity=Capacity bandwidth=Bandwidth?;
		public ParserRule getRule() { return rule; }

		//component=Component capacity=Capacity bandwidth=Bandwidth?
		public Group getGroup() { return cGroup; }

		//component=Component
		public Assignment getComponentAssignment_0() { return cComponentAssignment_0; }

		//Component
		public RuleCall getComponentComponentParserRuleCall_0_0() { return cComponentComponentParserRuleCall_0_0; }

		//capacity=Capacity
		public Assignment getCapacityAssignment_1() { return cCapacityAssignment_1; }

		//Capacity
		public RuleCall getCapacityCapacityParserRuleCall_1_0() { return cCapacityCapacityParserRuleCall_1_0; }

		//bandwidth=Bandwidth?
		public Assignment getBandwidthAssignment_2() { return cBandwidthAssignment_2; }

		//Bandwidth
		public RuleCall getBandwidthBandwidthParserRuleCall_2_0() { return cBandwidthBandwidthParserRuleCall_2_0; }
	}

	public class CapacityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Capacity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCapacityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCapacityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCapacityNATURAL_NUMBERTerminalRuleCall_2_0 = (RuleCall)cCapacityAssignment_2.eContents().get(0);
		
		//Capacity:
		//	"capacity" ":" capacity=NATURAL_NUMBER;
		public ParserRule getRule() { return rule; }

		//"capacity" ":" capacity=NATURAL_NUMBER
		public Group getGroup() { return cGroup; }

		//"capacity"
		public Keyword getCapacityKeyword_0() { return cCapacityKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//capacity=NATURAL_NUMBER
		public Assignment getCapacityAssignment_2() { return cCapacityAssignment_2; }

		//NATURAL_NUMBER
		public RuleCall getCapacityNATURAL_NUMBERTerminalRuleCall_2_0() { return cCapacityNATURAL_NUMBERTerminalRuleCall_2_0; }
	}

	public class ChannelsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Channels");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChannelsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cChannelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cChannelChannelParserRuleCall_2_0 = (RuleCall)cChannelAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Channels:
		//	"channels" "{" channel+=Channel* "}";
		public ParserRule getRule() { return rule; }

		//"channels" "{" channel+=Channel* "}"
		public Group getGroup() { return cGroup; }

		//"channels"
		public Keyword getChannelsKeyword_0() { return cChannelsKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//channel+=Channel*
		public Assignment getChannelAssignment_2() { return cChannelAssignment_2; }

		//Channel
		public RuleCall getChannelChannelParserRuleCall_2_0() { return cChannelChannelParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class ChannelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Channel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cApiKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cCliKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cWeb_interfaceKeyword_0_2 = (Keyword)cAlternatives_0.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOperationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOperationOperationParserRuleCall_2_0 = (RuleCall)cOperationAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Channel:
		//	("api" | "cli" | "web_interface") "{" operation+=Operation* "}";
		public ParserRule getRule() { return rule; }

		//("api" | "cli" | "web_interface") "{" operation+=Operation* "}"
		public Group getGroup() { return cGroup; }

		//"api" | "cli" | "web_interface"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"api"
		public Keyword getApiKeyword_0_0() { return cApiKeyword_0_0; }

		//"cli"
		public Keyword getCliKeyword_0_1() { return cCliKeyword_0_1; }

		//"web_interface"
		public Keyword getWeb_interfaceKeyword_0_2() { return cWeb_interfaceKeyword_0_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//operation+=Operation*
		public Assignment getOperationAssignment_2() { return cOperationAssignment_2; }

		//Operation
		public RuleCall getOperationOperationParserRuleCall_2_0() { return cOperationOperationParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Operation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOperationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOperationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOperationSTRINGTerminalRuleCall_2_0 = (RuleCall)cOperationAssignment_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionDescriptionParserRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		private final Assignment cCommandAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCommandCommandParserRuleCall_4_0 = (RuleCall)cCommandAssignment_4.eContents().get(0);
		private final Assignment cInformationReturnedAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInformationReturnedInformationReturnedParserRuleCall_5_0 = (RuleCall)cInformationReturnedAssignment_5.eContents().get(0);
		
		//Operation:
		//	"operation" ":" operation=STRING description=Description command=Command informationReturned=InformationReturned;
		public ParserRule getRule() { return rule; }

		//"operation" ":" operation=STRING description=Description command=Command informationReturned=InformationReturned
		public Group getGroup() { return cGroup; }

		//"operation"
		public Keyword getOperationKeyword_0() { return cOperationKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//operation=STRING
		public Assignment getOperationAssignment_2() { return cOperationAssignment_2; }

		//STRING
		public RuleCall getOperationSTRINGTerminalRuleCall_2_0() { return cOperationSTRINGTerminalRuleCall_2_0; }

		//description=Description
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }

		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_3_0() { return cDescriptionDescriptionParserRuleCall_3_0; }

		//command=Command
		public Assignment getCommandAssignment_4() { return cCommandAssignment_4; }

		//Command
		public RuleCall getCommandCommandParserRuleCall_4_0() { return cCommandCommandParserRuleCall_4_0; }

		//informationReturned=InformationReturned
		public Assignment getInformationReturnedAssignment_5() { return cInformationReturnedAssignment_5; }

		//InformationReturned
		public RuleCall getInformationReturnedInformationReturnedParserRuleCall_5_0() { return cInformationReturnedInformationReturnedParserRuleCall_5_0; }
	}

	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Command");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommandKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCommandAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCommandSTRINGTerminalRuleCall_2_0 = (RuleCall)cCommandAssignment_2.eContents().get(0);
		
		//Command:
		//	"command" ":" command=STRING;
		public ParserRule getRule() { return rule; }

		//"command" ":" command=STRING
		public Group getGroup() { return cGroup; }

		//"command"
		public Keyword getCommandKeyword_0() { return cCommandKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//command=STRING
		public Assignment getCommandAssignment_2() { return cCommandAssignment_2; }

		//STRING
		public RuleCall getCommandSTRINGTerminalRuleCall_2_0() { return cCommandSTRINGTerminalRuleCall_2_0; }
	}

	public class InformationReturnedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InformationReturned");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInformation_returnedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cInformationReturnedAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInformationReturnedSTRINGTerminalRuleCall_2_0 = (RuleCall)cInformationReturnedAssignment_2.eContents().get(0);
		
		//InformationReturned:
		//	"information_returned" ":" informationReturned=STRING;
		public ParserRule getRule() { return rule; }

		//"information_returned" ":" informationReturned=STRING
		public Group getGroup() { return cGroup; }

		//"information_returned"
		public Keyword getInformation_returnedKeyword_0() { return cInformation_returnedKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//informationReturned=STRING
		public Assignment getInformationReturnedAssignment_2() { return cInformationReturnedAssignment_2; }

		//STRING
		public RuleCall getInformationReturnedSTRINGTerminalRuleCall_2_0() { return cInformationReturnedSTRINGTerminalRuleCall_2_0; }
	}

	public class VersionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Version");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVersionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueNATURAL_NUMBERTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFullStopKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cNATURAL_NUMBERTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		
		//Version:
		//	"version" ":" value=NATURAL_NUMBER ("." NATURAL_NUMBER)+;
		public ParserRule getRule() { return rule; }

		//"version" ":" value=NATURAL_NUMBER ("." NATURAL_NUMBER)+
		public Group getGroup() { return cGroup; }

		//"version"
		public Keyword getVersionKeyword_0() { return cVersionKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=NATURAL_NUMBER
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//NATURAL_NUMBER
		public RuleCall getValueNATURAL_NUMBERTerminalRuleCall_2_0() { return cValueNATURAL_NUMBERTerminalRuleCall_2_0; }

		//("." NATURAL_NUMBER)+
		public Group getGroup_3() { return cGroup_3; }

		//"."
		public Keyword getFullStopKeyword_3_0() { return cFullStopKeyword_3_0; }

		//NATURAL_NUMBER
		public RuleCall getNATURAL_NUMBERTerminalRuleCall_3_1() { return cNATURAL_NUMBERTerminalRuleCall_3_1; }
	}
	
	
	private ScopeElements pScope;
	private UserProfileElements pUserProfile;
	private PersonalInfosElements pPersonalInfos;
	private BirthdayElements pBirthday;
	private AccountInfoElements pAccountInfo;
	private ProviderElements pProvider;
	private ApplicationProfileElements pApplicationProfile;
	private ApplicationInfosElements pApplicationInfos;
	private ApplicationCodeElements pApplicationCode;
	private PaasOfferingProfileElements pPaasOfferingProfile;
	private PaasOfferingInfosElements pPaasOfferingInfos;
	private FileElements pFile;
	private FileDimensionElements pFileDimension;
	private DigestElements pDigest;
	private TechnologyInfoElements pTechnologyInfo;
	private ProgrammingLanguageElements pProgrammingLanguage;
	private SoftwareElements pSoftware;
	private SoftwareCategoryElements pSoftwareCategory;
	private SoftwareComponentElements pSoftwareComponent;
	private ComponentElements pComponent;
	private DescriptionElements pDescription;
	private LicenseElements pLicense;
	private HardwareElements pHardware;
	private BoxElements pBox;
	private BoxComponentElements pBoxComponent;
	private HttpRequestsElements pHttpRequests;
	private ComputeElements pCompute;
	private ComputationalComponentElements pComputationalComponent;
	private ArchitectureElements pArchitecture;
	private CoresElements pCores;
	private SpeedElements pSpeed;
	private MemoryElements pMemory;
	private CacheElements pCache;
	private NetworkResourceElements pNetworkResource;
	private CommunicationalComponentElements pCommunicationalComponent;
	private BandwidthElements pBandwidth;
	private LatencyElements pLatency;
	private StorageResourceElements pStorageResource;
	private StorageComponentElements pStorageComponent;
	private CapacityElements pCapacity;
	private ChannelsElements pChannels;
	private ChannelElements pChannel;
	private OperationElements pOperation;
	private CommandElements pCommand;
	private InformationReturnedElements pInformationReturned;
	private VersionElements pVersion;
	private TerminalRule tNATURAL_NUMBER;
	private TerminalRule tDATE_US;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Scope:
	//	"profile" "{" (userProfile=UserProfile | applicationProfile=ApplicationProfile |
	//	paasOfferingProfile=PaasOfferingProfile) "}";
	public ScopeElements getScopeAccess() {
		return (pScope != null) ? pScope : (pScope = new ScopeElements());
	}
	
	public ParserRule getScopeRule() {
		return getScopeAccess().getRule();
	}

	//UserProfile:
	//	("developer" | "provider" ":" provider=Provider) "{" accountInfo=AccountInfo personalInfo=PersonalInfos "}";
	public UserProfileElements getUserProfileAccess() {
		return (pUserProfile != null) ? pUserProfile : (pUserProfile = new UserProfileElements());
	}
	
	public ParserRule getUserProfileRule() {
		return getUserProfileAccess().getRule();
	}

	//PersonalInfos:
	//	"firstname" ":" firstName=STRING "surname" ":" surnName=STRING "email" ":" email=STRING birthDay=Birthday?;
	public PersonalInfosElements getPersonalInfosAccess() {
		return (pPersonalInfos != null) ? pPersonalInfos : (pPersonalInfos = new PersonalInfosElements());
	}
	
	public ParserRule getPersonalInfosRule() {
		return getPersonalInfosAccess().getRule();
	}

	//Birthday:
	//	"birthday" ":" date=DATE_US;
	public BirthdayElements getBirthdayAccess() {
		return (pBirthday != null) ? pBirthday : (pBirthday = new BirthdayElements());
	}
	
	public ParserRule getBirthdayRule() {
		return getBirthdayAccess().getRule();
	}

	//AccountInfo:
	//	"username" ":" username=STRING "password" ":" password=STRING;
	public AccountInfoElements getAccountInfoAccess() {
		return (pAccountInfo != null) ? pAccountInfo : (pAccountInfo = new AccountInfoElements());
	}
	
	public ParserRule getAccountInfoRule() {
		return getAccountInfoAccess().getRule();
	}

	//Provider:
	//	provider=STRING "url" ":" homepage=STRING;
	public ProviderElements getProviderAccess() {
		return (pProvider != null) ? pProvider : (pProvider = new ProviderElements());
	}
	
	public ParserRule getProviderRule() {
		return getProviderAccess().getRule();
	}

	//ApplicationProfile:
	//	infos=ApplicationInfos file=File technology=TechnologyInfo;
	public ApplicationProfileElements getApplicationProfileAccess() {
		return (pApplicationProfile != null) ? pApplicationProfile : (pApplicationProfile = new ApplicationProfileElements());
	}
	
	public ParserRule getApplicationProfileRule() {
		return getApplicationProfileAccess().getRule();
	}

	//ApplicationInfos:
	//	"application" ":" application=STRING version=Version code=ApplicationCode?;
	public ApplicationInfosElements getApplicationInfosAccess() {
		return (pApplicationInfos != null) ? pApplicationInfos : (pApplicationInfos = new ApplicationInfosElements());
	}
	
	public ParserRule getApplicationInfosRule() {
		return getApplicationInfosAccess().getRule();
	}

	//ApplicationCode:
	//	"application_code" ":" applicationCode=STRING;
	public ApplicationCodeElements getApplicationCodeAccess() {
		return (pApplicationCode != null) ? pApplicationCode : (pApplicationCode = new ApplicationCodeElements());
	}
	
	public ParserRule getApplicationCodeRule() {
		return getApplicationCodeAccess().getRule();
	}

	//PaasOfferingProfile:
	//	paasOfferingInfos=PaasOfferingInfos channels=Channels technology=TechnologyInfo;
	public PaasOfferingProfileElements getPaasOfferingProfileAccess() {
		return (pPaasOfferingProfile != null) ? pPaasOfferingProfile : (pPaasOfferingProfile = new PaasOfferingProfileElements());
	}
	
	public ParserRule getPaasOfferingProfileRule() {
		return getPaasOfferingProfileAccess().getRule();
	}

	//PaasOfferingInfos:
	//	"paas_offering" ":" paasOffering=STRING;
	public PaasOfferingInfosElements getPaasOfferingInfosAccess() {
		return (pPaasOfferingInfos != null) ? pPaasOfferingInfos : (pPaasOfferingInfos = new PaasOfferingInfosElements());
	}
	
	public ParserRule getPaasOfferingInfosRule() {
		return getPaasOfferingInfosAccess().getRule();
	}

	//File:
	//	"file_name" ":" fileName=STRING dimension=FileDimension?;
	public FileElements getFileAccess() {
		return (pFile != null) ? pFile : (pFile = new FileElements());
	}
	
	public ParserRule getFileRule() {
		return getFileAccess().getRule();
	}

	//FileDimension:
	//	"size" ":" size=NATURAL_NUMBER digest=Digest?;
	public FileDimensionElements getFileDimensionAccess() {
		return (pFileDimension != null) ? pFileDimension : (pFileDimension = new FileDimensionElements());
	}
	
	public ParserRule getFileDimensionRule() {
		return getFileDimensionAccess().getRule();
	}

	//Digest:
	//	"digest" ":" digest=STRING;
	public DigestElements getDigestAccess() {
		return (pDigest != null) ? pDigest : (pDigest = new DigestElements());
	}
	
	public ParserRule getDigestRule() {
		return getDigestAccess().getRule();
	}

	//TechnologyInfo:
	//	programmingLanguage=ProgrammingLanguage software=Software hardware=Hardware;
	public TechnologyInfoElements getTechnologyInfoAccess() {
		return (pTechnologyInfo != null) ? pTechnologyInfo : (pTechnologyInfo = new TechnologyInfoElements());
	}
	
	public ParserRule getTechnologyInfoRule() {
		return getTechnologyInfoAccess().getRule();
	}

	//ProgrammingLanguage:
	//	"programming_language" ":" programmingLanguage=STRING version=Version;
	public ProgrammingLanguageElements getProgrammingLanguageAccess() {
		return (pProgrammingLanguage != null) ? pProgrammingLanguage : (pProgrammingLanguage = new ProgrammingLanguageElements());
	}
	
	public ParserRule getProgrammingLanguageRule() {
		return getProgrammingLanguageAccess().getRule();
	}

	//Software:
	//	"software" "{" (category+=SoftwareCategory "{" component+=SoftwareComponent+ "}")+ "}";
	public SoftwareElements getSoftwareAccess() {
		return (pSoftware != null) ? pSoftware : (pSoftware = new SoftwareElements());
	}
	
	public ParserRule getSoftwareRule() {
		return getSoftwareAccess().getRule();
	}

	//SoftwareCategory:
	//	"category" ":" category=STRING description=Description;
	public SoftwareCategoryElements getSoftwareCategoryAccess() {
		return (pSoftwareCategory != null) ? pSoftwareCategory : (pSoftwareCategory = new SoftwareCategoryElements());
	}
	
	public ParserRule getSoftwareCategoryRule() {
		return getSoftwareCategoryAccess().getRule();
	}

	//SoftwareComponent:
	//	component=Component version=Version license=License?;
	public SoftwareComponentElements getSoftwareComponentAccess() {
		return (pSoftwareComponent != null) ? pSoftwareComponent : (pSoftwareComponent = new SoftwareComponentElements());
	}
	
	public ParserRule getSoftwareComponentRule() {
		return getSoftwareComponentAccess().getRule();
	}

	//Component:
	//	"component" ":" component=STRING description=Description;
	public ComponentElements getComponentAccess() {
		return (pComponent != null) ? pComponent : (pComponent = new ComponentElements());
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}

	//Description:
	//	"description" ":" description=STRING;
	public DescriptionElements getDescriptionAccess() {
		return (pDescription != null) ? pDescription : (pDescription = new DescriptionElements());
	}
	
	public ParserRule getDescriptionRule() {
		return getDescriptionAccess().getRule();
	}

	//License:
	//	"license" ":" license=("GPL" | "LGPL" | "BSD" | "MIT");
	public LicenseElements getLicenseAccess() {
		return (pLicense != null) ? pLicense : (pLicense = new LicenseElements());
	}
	
	public ParserRule getLicenseRule() {
		return getLicenseAccess().getRule();
	}

	//Hardware:
	//	"hardware" "{" (box=Box | compute=Compute)? networkResource+=NetworkResource* storageResource+=StorageResource* "}";
	public HardwareElements getHardwareAccess() {
		return (pHardware != null) ? pHardware : (pHardware = new HardwareElements());
	}
	
	public ParserRule getHardwareRule() {
		return getHardwareAccess().getRule();
	}

	//Box:
	//	"box" box=BoxComponent;
	public BoxElements getBoxAccess() {
		return (pBox != null) ? pBox : (pBox = new BoxElements());
	}
	
	public ParserRule getBoxRule() {
		return getBoxAccess().getRule();
	}

	//BoxComponent:
	//	component=Component httpRequest=HttpRequests;
	public BoxComponentElements getBoxComponentAccess() {
		return (pBoxComponent != null) ? pBoxComponent : (pBoxComponent = new BoxComponentElements());
	}
	
	public ParserRule getBoxComponentRule() {
		return getBoxComponentAccess().getRule();
	}

	//HttpRequests:
	//	"http_requests" ":" http_requests=NATURAL_NUMBER;
	public HttpRequestsElements getHttpRequestsAccess() {
		return (pHttpRequests != null) ? pHttpRequests : (pHttpRequests = new HttpRequestsElements());
	}
	
	public ParserRule getHttpRequestsRule() {
		return getHttpRequestsAccess().getRule();
	}

	//Compute:
	//	"compute" compute=ComputationalComponent;
	public ComputeElements getComputeAccess() {
		return (pCompute != null) ? pCompute : (pCompute = new ComputeElements());
	}
	
	public ParserRule getComputeRule() {
		return getComputeAccess().getRule();
	}

	//ComputationalComponent:
	//	component=Component architecture=Architecture cores=Cores speed=Speed memory=Memory cache=Cache;
	public ComputationalComponentElements getComputationalComponentAccess() {
		return (pComputationalComponent != null) ? pComputationalComponent : (pComputationalComponent = new ComputationalComponentElements());
	}
	
	public ParserRule getComputationalComponentRule() {
		return getComputationalComponentAccess().getRule();
	}

	//Architecture:
	//	"architecture" ":" architecture=("x86" | "x64");
	public ArchitectureElements getArchitectureAccess() {
		return (pArchitecture != null) ? pArchitecture : (pArchitecture = new ArchitectureElements());
	}
	
	public ParserRule getArchitectureRule() {
		return getArchitectureAccess().getRule();
	}

	//Cores:
	//	"cores" ":" cores=NATURAL_NUMBER;
	public CoresElements getCoresAccess() {
		return (pCores != null) ? pCores : (pCores = new CoresElements());
	}
	
	public ParserRule getCoresRule() {
		return getCoresAccess().getRule();
	}

	//Speed:
	//	"speed" ":" speed=NATURAL_NUMBER;
	public SpeedElements getSpeedAccess() {
		return (pSpeed != null) ? pSpeed : (pSpeed = new SpeedElements());
	}
	
	public ParserRule getSpeedRule() {
		return getSpeedAccess().getRule();
	}

	//Memory:
	//	"memory" ":" memory=NATURAL_NUMBER;
	public MemoryElements getMemoryAccess() {
		return (pMemory != null) ? pMemory : (pMemory = new MemoryElements());
	}
	
	public ParserRule getMemoryRule() {
		return getMemoryAccess().getRule();
	}

	//Cache:
	//	"cache" ":" cache=NATURAL_NUMBER;
	public CacheElements getCacheAccess() {
		return (pCache != null) ? pCache : (pCache = new CacheElements());
	}
	
	public ParserRule getCacheRule() {
		return getCacheAccess().getRule();
	}

	//NetworkResource:
	//	"network_resource" networkResource=CommunicationalComponent;
	public NetworkResourceElements getNetworkResourceAccess() {
		return (pNetworkResource != null) ? pNetworkResource : (pNetworkResource = new NetworkResourceElements());
	}
	
	public ParserRule getNetworkResourceRule() {
		return getNetworkResourceAccess().getRule();
	}

	//CommunicationalComponent:
	//	component=Component bandwidth=Bandwidth latency=Latency?;
	public CommunicationalComponentElements getCommunicationalComponentAccess() {
		return (pCommunicationalComponent != null) ? pCommunicationalComponent : (pCommunicationalComponent = new CommunicationalComponentElements());
	}
	
	public ParserRule getCommunicationalComponentRule() {
		return getCommunicationalComponentAccess().getRule();
	}

	//Bandwidth:
	//	"bandwidth" ":" bandwidth=NATURAL_NUMBER;
	public BandwidthElements getBandwidthAccess() {
		return (pBandwidth != null) ? pBandwidth : (pBandwidth = new BandwidthElements());
	}
	
	public ParserRule getBandwidthRule() {
		return getBandwidthAccess().getRule();
	}

	//Latency:
	//	"latency" ":" latency=NATURAL_NUMBER;
	public LatencyElements getLatencyAccess() {
		return (pLatency != null) ? pLatency : (pLatency = new LatencyElements());
	}
	
	public ParserRule getLatencyRule() {
		return getLatencyAccess().getRule();
	}

	//StorageResource:
	//	"storage_resource" storageComponent=StorageComponent;
	public StorageResourceElements getStorageResourceAccess() {
		return (pStorageResource != null) ? pStorageResource : (pStorageResource = new StorageResourceElements());
	}
	
	public ParserRule getStorageResourceRule() {
		return getStorageResourceAccess().getRule();
	}

	//StorageComponent:
	//	component=Component capacity=Capacity bandwidth=Bandwidth?;
	public StorageComponentElements getStorageComponentAccess() {
		return (pStorageComponent != null) ? pStorageComponent : (pStorageComponent = new StorageComponentElements());
	}
	
	public ParserRule getStorageComponentRule() {
		return getStorageComponentAccess().getRule();
	}

	//Capacity:
	//	"capacity" ":" capacity=NATURAL_NUMBER;
	public CapacityElements getCapacityAccess() {
		return (pCapacity != null) ? pCapacity : (pCapacity = new CapacityElements());
	}
	
	public ParserRule getCapacityRule() {
		return getCapacityAccess().getRule();
	}

	//Channels:
	//	"channels" "{" channel+=Channel* "}";
	public ChannelsElements getChannelsAccess() {
		return (pChannels != null) ? pChannels : (pChannels = new ChannelsElements());
	}
	
	public ParserRule getChannelsRule() {
		return getChannelsAccess().getRule();
	}

	//Channel:
	//	("api" | "cli" | "web_interface") "{" operation+=Operation* "}";
	public ChannelElements getChannelAccess() {
		return (pChannel != null) ? pChannel : (pChannel = new ChannelElements());
	}
	
	public ParserRule getChannelRule() {
		return getChannelAccess().getRule();
	}

	//Operation:
	//	"operation" ":" operation=STRING description=Description command=Command informationReturned=InformationReturned;
	public OperationElements getOperationAccess() {
		return (pOperation != null) ? pOperation : (pOperation = new OperationElements());
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}

	//Command:
	//	"command" ":" command=STRING;
	public CommandElements getCommandAccess() {
		return (pCommand != null) ? pCommand : (pCommand = new CommandElements());
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}

	//InformationReturned:
	//	"information_returned" ":" informationReturned=STRING;
	public InformationReturnedElements getInformationReturnedAccess() {
		return (pInformationReturned != null) ? pInformationReturned : (pInformationReturned = new InformationReturnedElements());
	}
	
	public ParserRule getInformationReturnedRule() {
		return getInformationReturnedAccess().getRule();
	}

	//Version:
	//	"version" ":" value=NATURAL_NUMBER ("." NATURAL_NUMBER)+;
	public VersionElements getVersionAccess() {
		return (pVersion != null) ? pVersion : (pVersion = new VersionElements());
	}
	
	public ParserRule getVersionRule() {
		return getVersionAccess().getRule();
	}

	//terminal NATURAL_NUMBER returns ecore::EInt:
	//	"0".."9" | "1".."9" "0".."9"+;
	public TerminalRule getNATURAL_NUMBERRule() {
		return (tNATURAL_NUMBER != null) ? tNATURAL_NUMBER : (tNATURAL_NUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NATURAL_NUMBER"));
	} 

	//terminal DATE_US:
	//	"0".."9" "0".."9" "0".."9" "0".."9" "-" "0".."9" "0".."9" "-" "0".."9" "0".."9";
	public TerminalRule getDATE_USRule() {
		return (tDATE_US != null) ? tDATE_US : (tDATE_US = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DATE_US"));
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
