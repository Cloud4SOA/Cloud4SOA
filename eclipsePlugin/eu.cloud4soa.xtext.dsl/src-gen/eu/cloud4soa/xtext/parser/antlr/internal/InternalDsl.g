/*
* generated by Xtext
*/
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package eu.cloud4soa.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package eu.cloud4soa.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import eu.cloud4soa.xtext.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;
 	
    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Scope";	
   	}
   	
   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleScope
entryRuleScope returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScopeRule()); }
	 iv_ruleScope=ruleScope 
	 { $current=$iv_ruleScope.current; } 
	 EOF 
;

// Rule Scope
ruleScope returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='profile' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScopeAccess().getProfileKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getScopeAccess().getUserProfileUserProfileParserRuleCall_2_0_0()); 
	    }
		lv_userProfile_2_0=ruleUserProfile		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScopeRule());
	        }
       		set(
       			$current, 
       			"userProfile",
        		lv_userProfile_2_0, 
        		"UserProfile");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getScopeAccess().getApplicationProfileApplicationProfileParserRuleCall_2_1_0()); 
	    }
		lv_applicationProfile_3_0=ruleApplicationProfile		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScopeRule());
	        }
       		set(
       			$current, 
       			"applicationProfile",
        		lv_applicationProfile_3_0, 
        		"ApplicationProfile");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getScopeAccess().getPaasOfferingProfilePaasOfferingProfileParserRuleCall_2_2_0()); 
	    }
		lv_paasOfferingProfile_4_0=rulePaasOfferingProfile		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScopeRule());
	        }
       		set(
       			$current, 
       			"paasOfferingProfile",
        		lv_paasOfferingProfile_4_0, 
        		"PaasOfferingProfile");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleUserProfile
entryRuleUserProfile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUserProfileRule()); }
	 iv_ruleUserProfile=ruleUserProfile 
	 { $current=$iv_ruleUserProfile.current; } 
	 EOF 
;

// Rule UserProfile
ruleUserProfile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='developer' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUserProfileAccess().getDeveloperKeyword_0_0());
    }

    |(	otherlv_1='provider' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUserProfileAccess().getProviderKeyword_0_1_0());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUserProfileAccess().getColonKeyword_0_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserProfileAccess().getProviderProviderParserRuleCall_0_1_2_0()); 
	    }
		lv_provider_3_0=ruleProvider		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserProfileRule());
	        }
       		set(
       			$current, 
       			"provider",
        		lv_provider_3_0, 
        		"Provider");
	        afterParserOrEnumRuleCall();
	    }

)
)))	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUserProfileAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserProfileAccess().getAccountInfoAccountInfoParserRuleCall_2_0()); 
	    }
		lv_accountInfo_5_0=ruleAccountInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserProfileRule());
	        }
       		set(
       			$current, 
       			"accountInfo",
        		lv_accountInfo_5_0, 
        		"AccountInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUserProfileAccess().getPersonalInfoPersonalInfosParserRuleCall_3_0()); 
	    }
		lv_personalInfo_6_0=rulePersonalInfos		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserProfileRule());
	        }
       		set(
       			$current, 
       			"personalInfo",
        		lv_personalInfo_6_0, 
        		"PersonalInfos");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUserProfileAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePersonalInfos
entryRulePersonalInfos returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPersonalInfosRule()); }
	 iv_rulePersonalInfos=rulePersonalInfos 
	 { $current=$iv_rulePersonalInfos.current; } 
	 EOF 
;

// Rule PersonalInfos
rulePersonalInfos returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='firstname' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPersonalInfosAccess().getFirstnameKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPersonalInfosAccess().getColonKeyword_1());
    }
(
(
		lv_firstName_2_0=RULE_STRING
		{
			newLeafNode(lv_firstName_2_0, grammarAccess.getPersonalInfosAccess().getFirstNameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPersonalInfosRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"firstName",
        		lv_firstName_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='surname' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPersonalInfosAccess().getSurnameKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPersonalInfosAccess().getColonKeyword_4());
    }
(
(
		lv_surnName_5_0=RULE_STRING
		{
			newLeafNode(lv_surnName_5_0, grammarAccess.getPersonalInfosAccess().getSurnNameSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPersonalInfosRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"surnName",
        		lv_surnName_5_0, 
        		"STRING");
	    }

)
)	otherlv_6='email' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPersonalInfosAccess().getEmailKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPersonalInfosAccess().getColonKeyword_7());
    }
(
(
		lv_email_8_0=RULE_STRING
		{
			newLeafNode(lv_email_8_0, grammarAccess.getPersonalInfosAccess().getEmailSTRINGTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPersonalInfosRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"email",
        		lv_email_8_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPersonalInfosAccess().getBirthDayBirthdayParserRuleCall_9_0()); 
	    }
		lv_birthDay_9_0=ruleBirthday		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPersonalInfosRule());
	        }
       		set(
       			$current, 
       			"birthDay",
        		lv_birthDay_9_0, 
        		"Birthday");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleBirthday
entryRuleBirthday returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBirthdayRule()); }
	 iv_ruleBirthday=ruleBirthday 
	 { $current=$iv_ruleBirthday.current; } 
	 EOF 
;

// Rule Birthday
ruleBirthday returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='birthday' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBirthdayAccess().getBirthdayKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBirthdayAccess().getColonKeyword_1());
    }
(
(
		lv_date_2_0=RULE_DATE_US
		{
			newLeafNode(lv_date_2_0, grammarAccess.getBirthdayAccess().getDateDATE_USTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBirthdayRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"date",
        		lv_date_2_0, 
        		"DATE_US");
	    }

)
))
;





// Entry rule entryRuleAccountInfo
entryRuleAccountInfo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAccountInfoRule()); }
	 iv_ruleAccountInfo=ruleAccountInfo 
	 { $current=$iv_ruleAccountInfo.current; } 
	 EOF 
;

// Rule AccountInfo
ruleAccountInfo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='username' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAccountInfoAccess().getUsernameKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAccountInfoAccess().getColonKeyword_1());
    }
(
(
		lv_username_2_0=RULE_STRING
		{
			newLeafNode(lv_username_2_0, grammarAccess.getAccountInfoAccess().getUsernameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAccountInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"username",
        		lv_username_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='password' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAccountInfoAccess().getPasswordKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAccountInfoAccess().getColonKeyword_4());
    }
(
(
		lv_password_5_0=RULE_STRING
		{
			newLeafNode(lv_password_5_0, grammarAccess.getAccountInfoAccess().getPasswordSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAccountInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"password",
        		lv_password_5_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleProvider
entryRuleProvider returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProviderRule()); }
	 iv_ruleProvider=ruleProvider 
	 { $current=$iv_ruleProvider.current; } 
	 EOF 
;

// Rule Provider
ruleProvider returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_provider_0_0=RULE_STRING
		{
			newLeafNode(lv_provider_0_0, grammarAccess.getProviderAccess().getProviderSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProviderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"provider",
        		lv_provider_0_0, 
        		"STRING");
	    }

)
)	otherlv_1='url' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProviderAccess().getUrlKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProviderAccess().getColonKeyword_2());
    }
(
(
		lv_homepage_3_0=RULE_STRING
		{
			newLeafNode(lv_homepage_3_0, grammarAccess.getProviderAccess().getHomepageSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProviderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"homepage",
        		lv_homepage_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleApplicationProfile
entryRuleApplicationProfile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getApplicationProfileRule()); }
	 iv_ruleApplicationProfile=ruleApplicationProfile 
	 { $current=$iv_ruleApplicationProfile.current; } 
	 EOF 
;

// Rule ApplicationProfile
ruleApplicationProfile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getApplicationProfileAccess().getInfosApplicationInfosParserRuleCall_0_0()); 
	    }
		lv_infos_0_0=ruleApplicationInfos		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getApplicationProfileRule());
	        }
       		set(
       			$current, 
       			"infos",
        		lv_infos_0_0, 
        		"ApplicationInfos");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getApplicationProfileAccess().getFileFileParserRuleCall_1_0()); 
	    }
		lv_file_1_0=ruleFile		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getApplicationProfileRule());
	        }
       		set(
       			$current, 
       			"file",
        		lv_file_1_0, 
        		"File");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getApplicationProfileAccess().getTechnologyTechnologyInfoParserRuleCall_2_0()); 
	    }
		lv_technology_2_0=ruleTechnologyInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getApplicationProfileRule());
	        }
       		set(
       			$current, 
       			"technology",
        		lv_technology_2_0, 
        		"TechnologyInfo");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleApplicationInfos
entryRuleApplicationInfos returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getApplicationInfosRule()); }
	 iv_ruleApplicationInfos=ruleApplicationInfos 
	 { $current=$iv_ruleApplicationInfos.current; } 
	 EOF 
;

// Rule ApplicationInfos
ruleApplicationInfos returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='application' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getApplicationInfosAccess().getApplicationKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getApplicationInfosAccess().getColonKeyword_1());
    }
(
(
		lv_application_2_0=RULE_STRING
		{
			newLeafNode(lv_application_2_0, grammarAccess.getApplicationInfosAccess().getApplicationSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getApplicationInfosRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"application",
        		lv_application_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getApplicationInfosAccess().getVersionVersionParserRuleCall_3_0()); 
	    }
		lv_version_3_0=ruleVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getApplicationInfosRule());
	        }
       		set(
       			$current, 
       			"version",
        		lv_version_3_0, 
        		"Version");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getApplicationInfosAccess().getCodeApplicationCodeParserRuleCall_4_0()); 
	    }
		lv_code_4_0=ruleApplicationCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getApplicationInfosRule());
	        }
       		set(
       			$current, 
       			"code",
        		lv_code_4_0, 
        		"ApplicationCode");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleApplicationCode
entryRuleApplicationCode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getApplicationCodeRule()); }
	 iv_ruleApplicationCode=ruleApplicationCode 
	 { $current=$iv_ruleApplicationCode.current; } 
	 EOF 
;

// Rule ApplicationCode
ruleApplicationCode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='application_code' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getApplicationCodeAccess().getApplication_codeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getApplicationCodeAccess().getColonKeyword_1());
    }
(
(
		lv_applicationCode_2_0=RULE_STRING
		{
			newLeafNode(lv_applicationCode_2_0, grammarAccess.getApplicationCodeAccess().getApplicationCodeSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getApplicationCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"applicationCode",
        		lv_applicationCode_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePaasOfferingProfile
entryRulePaasOfferingProfile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPaasOfferingProfileRule()); }
	 iv_rulePaasOfferingProfile=rulePaasOfferingProfile 
	 { $current=$iv_rulePaasOfferingProfile.current; } 
	 EOF 
;

// Rule PaasOfferingProfile
rulePaasOfferingProfile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPaasOfferingProfileAccess().getPaasOfferingInfosPaasOfferingInfosParserRuleCall_0_0()); 
	    }
		lv_paasOfferingInfos_0_0=rulePaasOfferingInfos		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPaasOfferingProfileRule());
	        }
       		set(
       			$current, 
       			"paasOfferingInfos",
        		lv_paasOfferingInfos_0_0, 
        		"PaasOfferingInfos");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPaasOfferingProfileAccess().getChannelsChannelsParserRuleCall_1_0()); 
	    }
		lv_channels_1_0=ruleChannels		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPaasOfferingProfileRule());
	        }
       		set(
       			$current, 
       			"channels",
        		lv_channels_1_0, 
        		"Channels");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPaasOfferingProfileAccess().getTechnologyTechnologyInfoParserRuleCall_2_0()); 
	    }
		lv_technology_2_0=ruleTechnologyInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPaasOfferingProfileRule());
	        }
       		set(
       			$current, 
       			"technology",
        		lv_technology_2_0, 
        		"TechnologyInfo");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePaasOfferingInfos
entryRulePaasOfferingInfos returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPaasOfferingInfosRule()); }
	 iv_rulePaasOfferingInfos=rulePaasOfferingInfos 
	 { $current=$iv_rulePaasOfferingInfos.current; } 
	 EOF 
;

// Rule PaasOfferingInfos
rulePaasOfferingInfos returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='paas_offering' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPaasOfferingInfosAccess().getPaas_offeringKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPaasOfferingInfosAccess().getColonKeyword_1());
    }
(
(
		lv_paasOffering_2_0=RULE_STRING
		{
			newLeafNode(lv_paasOffering_2_0, grammarAccess.getPaasOfferingInfosAccess().getPaasOfferingSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPaasOfferingInfosRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"paasOffering",
        		lv_paasOffering_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleFile
entryRuleFile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileRule()); }
	 iv_ruleFile=ruleFile 
	 { $current=$iv_ruleFile.current; } 
	 EOF 
;

// Rule File
ruleFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='file_name' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFileAccess().getFile_nameKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFileAccess().getColonKeyword_1());
    }
(
(
		lv_fileName_2_0=RULE_STRING
		{
			newLeafNode(lv_fileName_2_0, grammarAccess.getFileAccess().getFileNameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fileName",
        		lv_fileName_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFileAccess().getDimensionFileDimensionParserRuleCall_3_0()); 
	    }
		lv_dimension_3_0=ruleFileDimension		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileRule());
	        }
       		set(
       			$current, 
       			"dimension",
        		lv_dimension_3_0, 
        		"FileDimension");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleFileDimension
entryRuleFileDimension returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileDimensionRule()); }
	 iv_ruleFileDimension=ruleFileDimension 
	 { $current=$iv_ruleFileDimension.current; } 
	 EOF 
;

// Rule FileDimension
ruleFileDimension returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='size' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFileDimensionAccess().getSizeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFileDimensionAccess().getColonKeyword_1());
    }
(
(
		lv_size_2_0=RULE_NATURAL_NUMBER
		{
			newLeafNode(lv_size_2_0, grammarAccess.getFileDimensionAccess().getSizeNATURAL_NUMBERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileDimensionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_2_0, 
        		"NATURAL_NUMBER");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFileDimensionAccess().getDigestDigestParserRuleCall_3_0()); 
	    }
		lv_digest_3_0=ruleDigest		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileDimensionRule());
	        }
       		set(
       			$current, 
       			"digest",
        		lv_digest_3_0, 
        		"Digest");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleDigest
entryRuleDigest returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDigestRule()); }
	 iv_ruleDigest=ruleDigest 
	 { $current=$iv_ruleDigest.current; } 
	 EOF 
;

// Rule Digest
ruleDigest returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='digest' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDigestAccess().getDigestKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDigestAccess().getColonKeyword_1());
    }
(
(
		lv_digest_2_0=RULE_STRING
		{
			newLeafNode(lv_digest_2_0, grammarAccess.getDigestAccess().getDigestSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDigestRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"digest",
        		lv_digest_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleTechnologyInfo
entryRuleTechnologyInfo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTechnologyInfoRule()); }
	 iv_ruleTechnologyInfo=ruleTechnologyInfo 
	 { $current=$iv_ruleTechnologyInfo.current; } 
	 EOF 
;

// Rule TechnologyInfo
ruleTechnologyInfo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTechnologyInfoAccess().getProgrammingLanguageProgrammingLanguageParserRuleCall_0_0()); 
	    }
		lv_programmingLanguage_0_0=ruleProgrammingLanguage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTechnologyInfoRule());
	        }
       		set(
       			$current, 
       			"programmingLanguage",
        		lv_programmingLanguage_0_0, 
        		"ProgrammingLanguage");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTechnologyInfoAccess().getSoftwareSoftwareParserRuleCall_1_0()); 
	    }
		lv_software_1_0=ruleSoftware		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTechnologyInfoRule());
	        }
       		set(
       			$current, 
       			"software",
        		lv_software_1_0, 
        		"Software");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTechnologyInfoAccess().getHardwareHardwareParserRuleCall_2_0()); 
	    }
		lv_hardware_2_0=ruleHardware		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTechnologyInfoRule());
	        }
       		set(
       			$current, 
       			"hardware",
        		lv_hardware_2_0, 
        		"Hardware");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleProgrammingLanguage
entryRuleProgrammingLanguage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProgrammingLanguageRule()); }
	 iv_ruleProgrammingLanguage=ruleProgrammingLanguage 
	 { $current=$iv_ruleProgrammingLanguage.current; } 
	 EOF 
;

// Rule ProgrammingLanguage
ruleProgrammingLanguage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='programming_language' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProgrammingLanguageAccess().getProgramming_languageKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProgrammingLanguageAccess().getColonKeyword_1());
    }
(
(
		lv_programmingLanguage_2_0=RULE_STRING
		{
			newLeafNode(lv_programmingLanguage_2_0, grammarAccess.getProgrammingLanguageAccess().getProgrammingLanguageSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgrammingLanguageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"programmingLanguage",
        		lv_programmingLanguage_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProgrammingLanguageAccess().getVersionVersionParserRuleCall_3_0()); 
	    }
		lv_version_3_0=ruleVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgrammingLanguageRule());
	        }
       		set(
       			$current, 
       			"version",
        		lv_version_3_0, 
        		"Version");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSoftware
entryRuleSoftware returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSoftwareRule()); }
	 iv_ruleSoftware=ruleSoftware 
	 { $current=$iv_ruleSoftware.current; } 
	 EOF 
;

// Rule Software
ruleSoftware returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='software' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSoftwareAccess().getSoftwareKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSoftwareAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSoftwareAccess().getCategorySoftwareCategoryParserRuleCall_2_0_0()); 
	    }
		lv_category_2_0=ruleSoftwareCategory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSoftwareRule());
	        }
       		add(
       			$current, 
       			"category",
        		lv_category_2_0, 
        		"SoftwareCategory");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSoftwareAccess().getLeftCurlyBracketKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSoftwareAccess().getComponentSoftwareComponentParserRuleCall_2_2_0()); 
	    }
		lv_component_4_0=ruleSoftwareComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSoftwareRule());
	        }
       		add(
       			$current, 
       			"component",
        		lv_component_4_0, 
        		"SoftwareComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSoftwareAccess().getRightCurlyBracketKeyword_2_3());
    }
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSoftwareAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSoftwareCategory
entryRuleSoftwareCategory returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSoftwareCategoryRule()); }
	 iv_ruleSoftwareCategory=ruleSoftwareCategory 
	 { $current=$iv_ruleSoftwareCategory.current; } 
	 EOF 
;

// Rule SoftwareCategory
ruleSoftwareCategory returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='category' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSoftwareCategoryAccess().getCategoryKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSoftwareCategoryAccess().getColonKeyword_1());
    }
(
(
		lv_category_2_0=RULE_STRING
		{
			newLeafNode(lv_category_2_0, grammarAccess.getSoftwareCategoryAccess().getCategorySTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSoftwareCategoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"category",
        		lv_category_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSoftwareCategoryAccess().getDescriptionDescriptionParserRuleCall_3_0()); 
	    }
		lv_description_3_0=ruleDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSoftwareCategoryRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_3_0, 
        		"Description");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSoftwareComponent
entryRuleSoftwareComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSoftwareComponentRule()); }
	 iv_ruleSoftwareComponent=ruleSoftwareComponent 
	 { $current=$iv_ruleSoftwareComponent.current; } 
	 EOF 
;

// Rule SoftwareComponent
ruleSoftwareComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSoftwareComponentAccess().getComponentComponentParserRuleCall_0_0()); 
	    }
		lv_component_0_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSoftwareComponentRule());
	        }
       		set(
       			$current, 
       			"component",
        		lv_component_0_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSoftwareComponentAccess().getVersionVersionParserRuleCall_1_0()); 
	    }
		lv_version_1_0=ruleVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSoftwareComponentRule());
	        }
       		set(
       			$current, 
       			"version",
        		lv_version_1_0, 
        		"Version");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSoftwareComponentAccess().getLicenseLicenseParserRuleCall_2_0()); 
	    }
		lv_license_2_0=ruleLicense		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSoftwareComponentRule());
	        }
       		set(
       			$current, 
       			"license",
        		lv_license_2_0, 
        		"License");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	 iv_ruleComponent=ruleComponent 
	 { $current=$iv_ruleComponent.current; } 
	 EOF 
;

// Rule Component
ruleComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='component' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getComponentAccess().getComponentKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getComponentAccess().getColonKeyword_1());
    }
(
(
		lv_component_2_0=RULE_STRING
		{
			newLeafNode(lv_component_2_0, grammarAccess.getComponentAccess().getComponentSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"component",
        		lv_component_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getDescriptionDescriptionParserRuleCall_3_0()); 
	    }
		lv_description_3_0=ruleDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_3_0, 
        		"Description");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDescription
entryRuleDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDescriptionRule()); }
	 iv_ruleDescription=ruleDescription 
	 { $current=$iv_ruleDescription.current; } 
	 EOF 
;

// Rule Description
ruleDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='description' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDescriptionAccess().getDescriptionKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDescriptionAccess().getColonKeyword_1());
    }
(
(
		lv_description_2_0=RULE_STRING
		{
			newLeafNode(lv_description_2_0, grammarAccess.getDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleLicense
entryRuleLicense returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLicenseRule()); }
	 iv_ruleLicense=ruleLicense 
	 { $current=$iv_ruleLicense.current; } 
	 EOF 
;

// Rule License
ruleLicense returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='license' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLicenseAccess().getLicenseKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLicenseAccess().getColonKeyword_1());
    }
(
(
(
		lv_license_2_1=	'GPL' 
    {
        newLeafNode(lv_license_2_1, grammarAccess.getLicenseAccess().getLicenseGPLKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLicenseRule());
	        }
       		setWithLastConsumed($current, "license", lv_license_2_1, null);
	    }

    |		lv_license_2_2=	'LGPL' 
    {
        newLeafNode(lv_license_2_2, grammarAccess.getLicenseAccess().getLicenseLGPLKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLicenseRule());
	        }
       		setWithLastConsumed($current, "license", lv_license_2_2, null);
	    }

    |		lv_license_2_3=	'BSD' 
    {
        newLeafNode(lv_license_2_3, grammarAccess.getLicenseAccess().getLicenseBSDKeyword_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLicenseRule());
	        }
       		setWithLastConsumed($current, "license", lv_license_2_3, null);
	    }

    |		lv_license_2_4=	'MIT' 
    {
        newLeafNode(lv_license_2_4, grammarAccess.getLicenseAccess().getLicenseMITKeyword_2_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLicenseRule());
	        }
       		setWithLastConsumed($current, "license", lv_license_2_4, null);
	    }

)

)
))
;





// Entry rule entryRuleHardware
entryRuleHardware returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHardwareRule()); }
	 iv_ruleHardware=ruleHardware 
	 { $current=$iv_ruleHardware.current; } 
	 EOF 
;

// Rule Hardware
ruleHardware returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='hardware' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHardwareAccess().getHardwareKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHardwareAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getHardwareAccess().getBoxBoxParserRuleCall_2_0_0()); 
	    }
		lv_box_2_0=ruleBox		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHardwareRule());
	        }
       		set(
       			$current, 
       			"box",
        		lv_box_2_0, 
        		"Box");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getHardwareAccess().getComputeComputeParserRuleCall_2_1_0()); 
	    }
		lv_compute_3_0=ruleCompute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHardwareRule());
	        }
       		set(
       			$current, 
       			"compute",
        		lv_compute_3_0, 
        		"Compute");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getHardwareAccess().getNetworkResourceNetworkResourceParserRuleCall_3_0()); 
	    }
		lv_networkResource_4_0=ruleNetworkResource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHardwareRule());
	        }
       		add(
       			$current, 
       			"networkResource",
        		lv_networkResource_4_0, 
        		"NetworkResource");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getHardwareAccess().getStorageResourceStorageResourceParserRuleCall_4_0()); 
	    }
		lv_storageResource_5_0=ruleStorageResource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHardwareRule());
	        }
       		add(
       			$current, 
       			"storageResource",
        		lv_storageResource_5_0, 
        		"StorageResource");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHardwareAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleBox
entryRuleBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoxRule()); }
	 iv_ruleBox=ruleBox 
	 { $current=$iv_ruleBox.current; } 
	 EOF 
;

// Rule Box
ruleBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='box' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoxAccess().getBoxKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoxAccess().getBoxBoxComponentParserRuleCall_1_0()); 
	    }
		lv_box_1_0=ruleBoxComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxRule());
	        }
       		set(
       			$current, 
       			"box",
        		lv_box_1_0, 
        		"BoxComponent");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBoxComponent
entryRuleBoxComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoxComponentRule()); }
	 iv_ruleBoxComponent=ruleBoxComponent 
	 { $current=$iv_ruleBoxComponent.current; } 
	 EOF 
;

// Rule BoxComponent
ruleBoxComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBoxComponentAccess().getComponentComponentParserRuleCall_0_0()); 
	    }
		lv_component_0_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxComponentRule());
	        }
       		set(
       			$current, 
       			"component",
        		lv_component_0_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBoxComponentAccess().getHttpRequestHttpRequestsParserRuleCall_1_0()); 
	    }
		lv_httpRequest_1_0=ruleHttpRequests		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxComponentRule());
	        }
       		set(
       			$current, 
       			"httpRequest",
        		lv_httpRequest_1_0, 
        		"HttpRequests");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleHttpRequests
entryRuleHttpRequests returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHttpRequestsRule()); }
	 iv_ruleHttpRequests=ruleHttpRequests 
	 { $current=$iv_ruleHttpRequests.current; } 
	 EOF 
;

// Rule HttpRequests
ruleHttpRequests returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='http_requests' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHttpRequestsAccess().getHttp_requestsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHttpRequestsAccess().getColonKeyword_1());
    }
(
(
		lv_http_requests_2_0=RULE_NATURAL_NUMBER
		{
			newLeafNode(lv_http_requests_2_0, grammarAccess.getHttpRequestsAccess().getHttp_requestsNATURAL_NUMBERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHttpRequestsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"http_requests",
        		lv_http_requests_2_0, 
        		"NATURAL_NUMBER");
	    }

)
))
;





// Entry rule entryRuleCompute
entryRuleCompute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComputeRule()); }
	 iv_ruleCompute=ruleCompute 
	 { $current=$iv_ruleCompute.current; } 
	 EOF 
;

// Rule Compute
ruleCompute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='compute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getComputeAccess().getComputeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComputeAccess().getComputeComputationalComponentParserRuleCall_1_0()); 
	    }
		lv_compute_1_0=ruleComputationalComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComputeRule());
	        }
       		set(
       			$current, 
       			"compute",
        		lv_compute_1_0, 
        		"ComputationalComponent");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleComputationalComponent
entryRuleComputationalComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComputationalComponentRule()); }
	 iv_ruleComputationalComponent=ruleComputationalComponent 
	 { $current=$iv_ruleComputationalComponent.current; } 
	 EOF 
;

// Rule ComputationalComponent
ruleComputationalComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getComputationalComponentAccess().getComponentComponentParserRuleCall_0_0()); 
	    }
		lv_component_0_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComputationalComponentRule());
	        }
       		set(
       			$current, 
       			"component",
        		lv_component_0_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComputationalComponentAccess().getArchitectureArchitectureParserRuleCall_1_0()); 
	    }
		lv_architecture_1_0=ruleArchitecture		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComputationalComponentRule());
	        }
       		set(
       			$current, 
       			"architecture",
        		lv_architecture_1_0, 
        		"Architecture");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComputationalComponentAccess().getCoresCoresParserRuleCall_2_0()); 
	    }
		lv_cores_2_0=ruleCores		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComputationalComponentRule());
	        }
       		set(
       			$current, 
       			"cores",
        		lv_cores_2_0, 
        		"Cores");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComputationalComponentAccess().getSpeedSpeedParserRuleCall_3_0()); 
	    }
		lv_speed_3_0=ruleSpeed		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComputationalComponentRule());
	        }
       		set(
       			$current, 
       			"speed",
        		lv_speed_3_0, 
        		"Speed");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComputationalComponentAccess().getMemoryMemoryParserRuleCall_4_0()); 
	    }
		lv_memory_4_0=ruleMemory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComputationalComponentRule());
	        }
       		set(
       			$current, 
       			"memory",
        		lv_memory_4_0, 
        		"Memory");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComputationalComponentAccess().getCacheCacheParserRuleCall_5_0()); 
	    }
		lv_cache_5_0=ruleCache		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComputationalComponentRule());
	        }
       		set(
       			$current, 
       			"cache",
        		lv_cache_5_0, 
        		"Cache");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleArchitecture
entryRuleArchitecture returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArchitectureRule()); }
	 iv_ruleArchitecture=ruleArchitecture 
	 { $current=$iv_ruleArchitecture.current; } 
	 EOF 
;

// Rule Architecture
ruleArchitecture returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='architecture' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArchitectureAccess().getArchitectureKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArchitectureAccess().getColonKeyword_1());
    }
(
(
(
		lv_architecture_2_1=	'x86' 
    {
        newLeafNode(lv_architecture_2_1, grammarAccess.getArchitectureAccess().getArchitectureX86Keyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArchitectureRule());
	        }
       		setWithLastConsumed($current, "architecture", lv_architecture_2_1, null);
	    }

    |		lv_architecture_2_2=	'x64' 
    {
        newLeafNode(lv_architecture_2_2, grammarAccess.getArchitectureAccess().getArchitectureX64Keyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArchitectureRule());
	        }
       		setWithLastConsumed($current, "architecture", lv_architecture_2_2, null);
	    }

)

)
))
;





// Entry rule entryRuleCores
entryRuleCores returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCoresRule()); }
	 iv_ruleCores=ruleCores 
	 { $current=$iv_ruleCores.current; } 
	 EOF 
;

// Rule Cores
ruleCores returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='cores' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCoresAccess().getCoresKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCoresAccess().getColonKeyword_1());
    }
(
(
		lv_cores_2_0=RULE_NATURAL_NUMBER
		{
			newLeafNode(lv_cores_2_0, grammarAccess.getCoresAccess().getCoresNATURAL_NUMBERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCoresRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"cores",
        		lv_cores_2_0, 
        		"NATURAL_NUMBER");
	    }

)
))
;





// Entry rule entryRuleSpeed
entryRuleSpeed returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpeedRule()); }
	 iv_ruleSpeed=ruleSpeed 
	 { $current=$iv_ruleSpeed.current; } 
	 EOF 
;

// Rule Speed
ruleSpeed returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='speed' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpeedAccess().getSpeedKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpeedAccess().getColonKeyword_1());
    }
(
(
		lv_speed_2_0=RULE_NATURAL_NUMBER
		{
			newLeafNode(lv_speed_2_0, grammarAccess.getSpeedAccess().getSpeedNATURAL_NUMBERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpeedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"speed",
        		lv_speed_2_0, 
        		"NATURAL_NUMBER");
	    }

)
))
;





// Entry rule entryRuleMemory
entryRuleMemory returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMemoryRule()); }
	 iv_ruleMemory=ruleMemory 
	 { $current=$iv_ruleMemory.current; } 
	 EOF 
;

// Rule Memory
ruleMemory returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='memory' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMemoryAccess().getMemoryKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMemoryAccess().getColonKeyword_1());
    }
(
(
		lv_memory_2_0=RULE_NATURAL_NUMBER
		{
			newLeafNode(lv_memory_2_0, grammarAccess.getMemoryAccess().getMemoryNATURAL_NUMBERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMemoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"memory",
        		lv_memory_2_0, 
        		"NATURAL_NUMBER");
	    }

)
))
;





// Entry rule entryRuleCache
entryRuleCache returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCacheRule()); }
	 iv_ruleCache=ruleCache 
	 { $current=$iv_ruleCache.current; } 
	 EOF 
;

// Rule Cache
ruleCache returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='cache' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCacheAccess().getCacheKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCacheAccess().getColonKeyword_1());
    }
(
(
		lv_cache_2_0=RULE_NATURAL_NUMBER
		{
			newLeafNode(lv_cache_2_0, grammarAccess.getCacheAccess().getCacheNATURAL_NUMBERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCacheRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"cache",
        		lv_cache_2_0, 
        		"NATURAL_NUMBER");
	    }

)
))
;





// Entry rule entryRuleNetworkResource
entryRuleNetworkResource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNetworkResourceRule()); }
	 iv_ruleNetworkResource=ruleNetworkResource 
	 { $current=$iv_ruleNetworkResource.current; } 
	 EOF 
;

// Rule NetworkResource
ruleNetworkResource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='network_resource' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNetworkResourceAccess().getNetwork_resourceKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNetworkResourceAccess().getNetworkResourceCommunicationalComponentParserRuleCall_1_0()); 
	    }
		lv_networkResource_1_0=ruleCommunicationalComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNetworkResourceRule());
	        }
       		set(
       			$current, 
       			"networkResource",
        		lv_networkResource_1_0, 
        		"CommunicationalComponent");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCommunicationalComponent
entryRuleCommunicationalComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommunicationalComponentRule()); }
	 iv_ruleCommunicationalComponent=ruleCommunicationalComponent 
	 { $current=$iv_ruleCommunicationalComponent.current; } 
	 EOF 
;

// Rule CommunicationalComponent
ruleCommunicationalComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCommunicationalComponentAccess().getComponentComponentParserRuleCall_0_0()); 
	    }
		lv_component_0_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommunicationalComponentRule());
	        }
       		set(
       			$current, 
       			"component",
        		lv_component_0_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCommunicationalComponentAccess().getBandwidthBandwidthParserRuleCall_1_0()); 
	    }
		lv_bandwidth_1_0=ruleBandwidth		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommunicationalComponentRule());
	        }
       		set(
       			$current, 
       			"bandwidth",
        		lv_bandwidth_1_0, 
        		"Bandwidth");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCommunicationalComponentAccess().getLatencyLatencyParserRuleCall_2_0()); 
	    }
		lv_latency_2_0=ruleLatency		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommunicationalComponentRule());
	        }
       		set(
       			$current, 
       			"latency",
        		lv_latency_2_0, 
        		"Latency");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleBandwidth
entryRuleBandwidth returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBandwidthRule()); }
	 iv_ruleBandwidth=ruleBandwidth 
	 { $current=$iv_ruleBandwidth.current; } 
	 EOF 
;

// Rule Bandwidth
ruleBandwidth returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='bandwidth' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBandwidthAccess().getBandwidthKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBandwidthAccess().getColonKeyword_1());
    }
(
(
		lv_bandwidth_2_0=RULE_NATURAL_NUMBER
		{
			newLeafNode(lv_bandwidth_2_0, grammarAccess.getBandwidthAccess().getBandwidthNATURAL_NUMBERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBandwidthRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bandwidth",
        		lv_bandwidth_2_0, 
        		"NATURAL_NUMBER");
	    }

)
))
;





// Entry rule entryRuleLatency
entryRuleLatency returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLatencyRule()); }
	 iv_ruleLatency=ruleLatency 
	 { $current=$iv_ruleLatency.current; } 
	 EOF 
;

// Rule Latency
ruleLatency returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='latency' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLatencyAccess().getLatencyKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLatencyAccess().getColonKeyword_1());
    }
(
(
		lv_latency_2_0=RULE_NATURAL_NUMBER
		{
			newLeafNode(lv_latency_2_0, grammarAccess.getLatencyAccess().getLatencyNATURAL_NUMBERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLatencyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"latency",
        		lv_latency_2_0, 
        		"NATURAL_NUMBER");
	    }

)
))
;





// Entry rule entryRuleStorageResource
entryRuleStorageResource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStorageResourceRule()); }
	 iv_ruleStorageResource=ruleStorageResource 
	 { $current=$iv_ruleStorageResource.current; } 
	 EOF 
;

// Rule StorageResource
ruleStorageResource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='storage_resource' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStorageResourceAccess().getStorage_resourceKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStorageResourceAccess().getStorageComponentStorageComponentParserRuleCall_1_0()); 
	    }
		lv_storageComponent_1_0=ruleStorageComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStorageResourceRule());
	        }
       		set(
       			$current, 
       			"storageComponent",
        		lv_storageComponent_1_0, 
        		"StorageComponent");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStorageComponent
entryRuleStorageComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStorageComponentRule()); }
	 iv_ruleStorageComponent=ruleStorageComponent 
	 { $current=$iv_ruleStorageComponent.current; } 
	 EOF 
;

// Rule StorageComponent
ruleStorageComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStorageComponentAccess().getComponentComponentParserRuleCall_0_0()); 
	    }
		lv_component_0_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStorageComponentRule());
	        }
       		set(
       			$current, 
       			"component",
        		lv_component_0_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStorageComponentAccess().getCapacityCapacityParserRuleCall_1_0()); 
	    }
		lv_capacity_1_0=ruleCapacity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStorageComponentRule());
	        }
       		set(
       			$current, 
       			"capacity",
        		lv_capacity_1_0, 
        		"Capacity");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStorageComponentAccess().getBandwidthBandwidthParserRuleCall_2_0()); 
	    }
		lv_bandwidth_2_0=ruleBandwidth		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStorageComponentRule());
	        }
       		set(
       			$current, 
       			"bandwidth",
        		lv_bandwidth_2_0, 
        		"Bandwidth");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleCapacity
entryRuleCapacity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCapacityRule()); }
	 iv_ruleCapacity=ruleCapacity 
	 { $current=$iv_ruleCapacity.current; } 
	 EOF 
;

// Rule Capacity
ruleCapacity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='capacity' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCapacityAccess().getCapacityKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCapacityAccess().getColonKeyword_1());
    }
(
(
		lv_capacity_2_0=RULE_NATURAL_NUMBER
		{
			newLeafNode(lv_capacity_2_0, grammarAccess.getCapacityAccess().getCapacityNATURAL_NUMBERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCapacityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"capacity",
        		lv_capacity_2_0, 
        		"NATURAL_NUMBER");
	    }

)
))
;





// Entry rule entryRuleChannels
entryRuleChannels returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChannelsRule()); }
	 iv_ruleChannels=ruleChannels 
	 { $current=$iv_ruleChannels.current; } 
	 EOF 
;

// Rule Channels
ruleChannels returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='channels' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChannelsAccess().getChannelsKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getChannelsAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChannelsAccess().getChannelChannelParserRuleCall_2_0()); 
	    }
		lv_channel_2_0=ruleChannel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChannelsRule());
	        }
       		add(
       			$current, 
       			"channel",
        		lv_channel_2_0, 
        		"Channel");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getChannelsAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleChannel
entryRuleChannel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChannelRule()); }
	 iv_ruleChannel=ruleChannel 
	 { $current=$iv_ruleChannel.current; } 
	 EOF 
;

// Rule Channel
ruleChannel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='api' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChannelAccess().getApiKeyword_0_0());
    }

    |	otherlv_1='cli' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getChannelAccess().getCliKeyword_0_1());
    }

    |	otherlv_2='web_interface' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getChannelAccess().getWeb_interfaceKeyword_0_2());
    }
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getChannelAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChannelAccess().getOperationOperationParserRuleCall_2_0()); 
	    }
		lv_operation_4_0=ruleOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChannelRule());
	        }
       		add(
       			$current, 
       			"operation",
        		lv_operation_4_0, 
        		"Operation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getChannelAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	 iv_ruleOperation=ruleOperation 
	 { $current=$iv_ruleOperation.current; } 
	 EOF 
;

// Rule Operation
ruleOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='operation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOperationAccess().getOperationKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperationAccess().getColonKeyword_1());
    }
(
(
		lv_operation_2_0=RULE_STRING
		{
			newLeafNode(lv_operation_2_0, grammarAccess.getOperationAccess().getOperationSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getDescriptionDescriptionParserRuleCall_3_0()); 
	    }
		lv_description_3_0=ruleDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_3_0, 
        		"Description");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getCommandCommandParserRuleCall_4_0()); 
	    }
		lv_command_4_0=ruleCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"command",
        		lv_command_4_0, 
        		"Command");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getInformationReturnedInformationReturnedParserRuleCall_5_0()); 
	    }
		lv_informationReturned_5_0=ruleInformationReturned		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"informationReturned",
        		lv_informationReturned_5_0, 
        		"InformationReturned");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	 iv_ruleCommand=ruleCommand 
	 { $current=$iv_ruleCommand.current; } 
	 EOF 
;

// Rule Command
ruleCommand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='command' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCommandAccess().getCommandKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCommandAccess().getColonKeyword_1());
    }
(
(
		lv_command_2_0=RULE_STRING
		{
			newLeafNode(lv_command_2_0, grammarAccess.getCommandAccess().getCommandSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommandRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"command",
        		lv_command_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleInformationReturned
entryRuleInformationReturned returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInformationReturnedRule()); }
	 iv_ruleInformationReturned=ruleInformationReturned 
	 { $current=$iv_ruleInformationReturned.current; } 
	 EOF 
;

// Rule InformationReturned
ruleInformationReturned returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='information_returned' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInformationReturnedAccess().getInformation_returnedKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInformationReturnedAccess().getColonKeyword_1());
    }
(
(
		lv_informationReturned_2_0=RULE_STRING
		{
			newLeafNode(lv_informationReturned_2_0, grammarAccess.getInformationReturnedAccess().getInformationReturnedSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInformationReturnedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"informationReturned",
        		lv_informationReturned_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	 iv_ruleVersion=ruleVersion 
	 { $current=$iv_ruleVersion.current; } 
	 EOF 
;

// Rule Version
ruleVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='version' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVersionAccess().getVersionKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVersionAccess().getColonKeyword_1());
    }
(
(
		lv_value_2_0=RULE_NATURAL_NUMBER
		{
			newLeafNode(lv_value_2_0, grammarAccess.getVersionAccess().getValueNATURAL_NUMBERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVersionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"NATURAL_NUMBER");
	    }

)
)(	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVersionAccess().getFullStopKeyword_3_0());
    }
this_NATURAL_NUMBER_4=RULE_NATURAL_NUMBER
    { 
    newLeafNode(this_NATURAL_NUMBER_4, grammarAccess.getVersionAccess().getNATURAL_NUMBERTerminalRuleCall_3_1()); 
    }
)+)
;





RULE_NATURAL_NUMBER : ('0'..'9'|'1'..'9' ('0'..'9')+);

RULE_DATE_US : '0'..'9' '0'..'9' '0'..'9' '0'..'9' '-' '0'..'9' '0'..'9' '-' '0'..'9' '0'..'9';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


